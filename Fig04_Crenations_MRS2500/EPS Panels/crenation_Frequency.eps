%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 237 91
%%HiResBoundingBox: 0 0 237 91
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font XGMHYL+Helvetica
%!FontType1-1.0: XGMHYL+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /XGMHYL+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 67 /C put
dup 69 /E put
dup 80 /P put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966D6518B5A8694B2654089FE00D86C0A7AE42411274EE55A1E0BAFD
F224E724525A32C38BF7C3DE517DC596830294AF404BD5F17FCD5789C434999B
90F3BC7D353843D7CD5C9AB7FDD85F6CE4F559851FBD2AC5821DA8BF693FBF22
AD92F11D7536969FEA694958BFF6EBDCF8BC430DFA526F4ADB45A2E8BBCB6B39
FF3941C860E99A1C077794384CE270F6A84085BA20BD6810960CE8EDCED38A1F
29778F05B0ECDC5335C47C8129872BB140BF70F36870F9722A008B3F24F60E15
EC6F3BDB2143EEE32ECC87CCD33328283A7A9ED63865F0AB41B48179B0A8C76A
EFF5AE2AA9A0E564D7C1E624959DFCE7C28340E1CC88533B6FBF7A8F0D650EB4
10708DB3D88A9BECF267B58226E1CCAAEEDC82151AD745D095237126F7990C87
762560E4EDBECC98B02955D00D5C224094C09164AD72CE1248051E8D36F58142
CA45EA9E5F012E2F12A5A7CDDC6D44A492D31C9370330CFC5B81462D9FF3CCEA
5E4895838D9E4AA66DF23FB4120190FC8CCE3B553400DB745B2D4848C307D662
CA0805823BD6D080C28CB8306200B72B83B724B4D79B98287A7650712B063ABB
0E7C26EA9C61E386C709A08051DCAD5B1EA3A1193825C7D70D7FCC1A5B7A35DE
55718895F032574E07C90821C952C113A8E0B1617479CF3AE054DDD0F43754B4
3B81928944005F272FD23CE707A9D434DA175A91CFD6E85934F4D32FD7B75055
79200379F2EB3893874D67B2AA0181A6ADB2BC1DCD53FCEA6E2833A0B7B2D027
C0E3D8BB84A5CD851050B1FFF31607FBB22FCFC2D500A25EB6FE84B740CFB190
9DB4C52A391F2076E88A240F7218D65E3C0CB7D4FB84C3F3C6C34100932087B1
0B031EB0EE4BC569CDFEC23EE49C0138E8520D99E7FC52A9FEE4D4AECDFE78F5
46E3D57609BB93477E7E2B0B58D0D55AB02945DCBE240AA04C992CDE755286C1
60F7A11B340B0DCAA6DE5F8EE7F937E7FE279593BC78CEE72B2AF571CBDF3FB9
0C3EDADC6F4B9AEBDA37CAC2393B3F7B0743870527D0F47F976F5BE3B233C1EB
1B98A48F9636B8DEFD8091B71DE32745E3D0AB59D6A495AA6FC7A7A73E9380E1
D2450B51C9E414C6C484558AF30599899495491BE0BD33802FD016CF77298245
274A5949BEFA3F8DE143E084E7F6CF7C5CF610DCD05F3CD835069B24C237213D
72B72AB9BEBC5B1D5E3432C3F37C3536571446E706B37808421A14502EE88F44
CD63BAE8FE55844B789DC42FF6A50F4B0CBC757BA8EB34ADA981DAC500BFA209
03C78A07CA8DA35669081D41515FE9D90D4700C35043FE53B717CD82163836DE
AC17846F203E41FD0B00F621E8FA26942D5C457254702E8986F6A7713818B8E3
781BB22B39FDABE9773E0D1CC0C11905B789283386FB4E88B3BB52C0EC25F2F1
D1FD9702F7FCE17C4F00BAA160572A379A259E2A13B207F0B91072CBF0749CEE
D6AEAAF2D0D9177B1E1B4E0CE05BB97BCC6257A4D507B0CF176275F3058FB8A2
3712108569E536A72A59CC9A3F5E9621E1D8B86B97D33FDAAB61CAEDBE2AEED5
CCCA1283A7D8C9FAEC8FE270318C517B51000067529015B2E7BBEF6DF840A703
C6DD41E388E2BB108A6B794FAC8468B4DCB8C2D1AEA2DDFBEF50984DBACC16AF
A36C616F7AABD16BBECD5AAF28F3D5A5DF7E3388AECC3367E154F66E0B021059
1BCC50786E7507568ABD06EA545C99538A6BB3371711988600A9DCC7B64FD908
0316326FA2FA2AE940548A699F6518744A8C8FFC347030894915956E52307DD2
B2D1741A4002C25C5E7433267A63C2BD7ED0B34BB906CA929433A8F1B35FD9A1
2A1ABA44A071DA7FEEFDE56D1B0F5A902186C5A3AF176AE6836CC099CC660B88
7EBA97B201416086FBD3C8AB89F494F2C302A225543D0941387806E4486F7136
9022867F2CF0DBC3E0315935A085475B40E0ABA0817B90C34A94BE7ABFF5E9EC
AC93EE1D1616FD118EF4269DED603EC52CB456F769B4D24627791C235E383FF1
0D2242026B0A3B965C86A509CA76033B6AE8BB4E5A2DD9B3E8A5FC44CAFD545A
EEF1473C34E49FD7AB94E7D8FD10AD2E60A8955B6570986188E47270712580BC
285CD4AAC72A99BA5E81FA46D8154FAC4E422E980E5041715162B75079ED79E8
1CCEC5A3F3F564A920E9528FBCCA82F7B03E79F313C65A78674BCE88AEB5B749
05F25AE7288A438F6D3FCCE380D5BD57BE148A354A1ABCA1907F6FEC367C608C
1B40281D8F2FDAD89EF0D164B5F192FF62E4D4F1788C59CA13D1298D57EA3FCE
C194D65E8060255FA1D8CFD51761A7C450776657A458FA166BC662D05D5A89CB
20514DBE7F8A3F8F25337913BBF3CF1CF50AF42760DB24622FB2F8A99DE52D0D
88F8258A952D13433E6252B849F7018CCFE2342F795F166C61A291C7927B8BE2
C0B4CEA9D8A43EADED53C1CC31057B61763368A46A3B94C8CCEE0034F1F93A87
6A8C1E47B6018CBA3D87B1A8D99113236E4956CF337BB0AFC7806B3FFB6662A7
26A382415D741FE94C67AA188FC4347A567D597034AE8E24F690A0DDF72F13AB
926B382BAC9EDB8228C119AE09C7C03841AA1478BFE5543A7FF33A59676AD3CF
938AA4F02C2436B73009CCE4D06EAE73787E180D5AEA542EA9EF80AD3E87F235
C2A382C4D6EF15CCEF8396C7C5AC002FCAFEAA0C7224F4EB324FF64CEDE525B8
9ABB898ACFE20B3C79E72BBB89542AA913B2AF5F9560C350A804360919DAEEAC
7AC73F5A5C0BD136C062DE70CB4F735BDB3C2520B0AB15FE94AA6E4C43FD613B
38CE792949550C409937C01FAAC349C6819F45FB3FBBE8FABB7DE2421B44C2DE
E84DC1464897D06D67FF4C4DB52842C31C64BCB8B25934908DCA9BDEB498B966
7CD582BF356DEE9DDF93382BDA97B54DC244CD70ABE972F9691121F4C3A721F8
871E2DAF7225A051A66733B329F093A675E1B4FDA80027C08D9FFD4237923955
77ADBA3838BFC5BA9C2533B303151716CE75FFD1B02DD204FC63B3534F97A00E
F062B16B776743DBE0257F9E5F2F7723CFE77008A1A3B95C4243C9E93DC439B7
37482225622251C5E837208AABE5329773F6033C23E50E8961F05D12F99F0FD8
665B2CA735E8505F9B7E6A14D37F7A3E06CAEDB34A1D501EA963D5C6014C9006
B43317537F7F3B8E28944391E8E12262A52236BE82A2BEC01D7F28B5E6D110FE
9F9E81B7AB5249806E61AFE2759C561655591B08AA9E7DE2C8C84406D2296991
A1FCBB9848F31A8377126941A08287310D87C6F252072097F6BAAB4A536A97F6
4DABEE021E5F719CBB1B9B9B075560A2D35E1527A2B72F3E2A169B34AEBF6751
96570E0EAEC824F2A629D2F816C8EAEFAD2D362C124A6CA7FE66C3483355717B
25CFEBEA2937C502716E3C48C17A0D0413E2F27D332F68434AE11E0C9CE4B59A
DA44DE69D77C935CADC833F80400B519CB26D4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /XGMHYL+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 237 91 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-110 20 2700 900 re
f
-110 20 2700 900 re
f
242.5 140 2092.5 712.5 re
f
7.5 w
2 J
1 j
/DeviceGray {} CS
[0] SC
242.5 140 m
2335 140 l
S
504.063 140 m
504.063 119.074 l
S
1027.19 140 m
1027.19 119.074 l
S
1550.31 140 m
1550.31 119.074 l
S
2073.44 140 m
2073.44 119.074 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 38.7813 3.75742] Tm
0 0 Td
/F8_0 6.99975 Tf
(E16-17)
[4.668833
0
3.891861
0
3.891861
0
2.330917
0
3.891861
0
3.891861
0] Tj
-4838.79 TJm
(P0-2)
[4.668833
0
3.891861
0
2.330917
0
3.891861
0] Tj
-5361.48 TJm
(P6-8)
[4.668833
0
3.891861
0
2.330917
0
3.891861
0] Tj
-4772.17 TJm
(P10-12)
[4.668833
0
3.891861
0
3.891861
0
2.330917
0
3.891861
0
3.891861
0] Tj
Q
242.5 140 m
242.5 852.5 l
S
242.5 140 m
221.574 140 l
S
242.5 496.25 m
221.574 496.25 l
S
242.5 852.5 m
221.574 852.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 16.2574 11.375] Tm
0 0 Td
/F8_0 6.99975 Tf
(0)
[3.891861
0] Tj
-5.25 35.625 Td
(2.5)
[3.891861
0
1.945931
0
3.891861
0] Tj
0 71.25 Td
(5)
[3.891861
0] Tj
[0 1 -1 0 7.75742 10.25] Tm
0 0 Td
/F8_0 8.00025 Tf
(Crenations per minute)
[5.776181
0
2.664083
0
4.448139
0
4.448139
0
4.448139
0
2.22407
0
1.776055
0
4.448139
0
4.448139
0
4.000125
0
2.22407
0
4.448139
0
4.448139
0
2.664083
0
2.22407
0
6.664208
0
1.776055
0
4.448139
0
4.448139
0
2.22407
0
4.448139
0] Tj
Q
5.0025 w
0 J
/DeviceGray {} CS
[0.7012] SC
347.125 140 m
661 140 l
S
347.125 140 m
661 140 l
S
347.125 140 m
661 140 l
S
347.125 140 m
661 140 l
S
347.125 140 m
661 140 l
S
347.125 140 m
661 140 l
S
870.25 140 m
1184.13 140 l
S
870.25 140 m
1027.19 140 l
1184.13 154.25 l
S
870.25 140 m
1184.13 140 l
S
870.25 140 m
1184.13 140 l
S
870.25 140 m
1184.13 140 l
S
1393.38 610.25 m
1550.31 140 l
1707.25 453.5 l
S
1393.38 653 m
1550.31 140 l
1707.25 453.5 l
S
1393.38 524.75 m
1550.31 154.25 l
1707.25 681.5 l
S
1393.38 767 m
1550.31 140 l
1707.25 524.75 l
S
1393.38 467.75 m
1550.31 140 l
1707.25 410.75 l
S
1916.5 781.25 m
2073.44 168.5 l
2230.38 638.75 l
S
1916.5 653 m
2073.44 168.5 l
2230.38 524.75 l
S
1916.5 524.75 m
2073.44 182.75 l
2230.38 467.75 l
S
1916.5 581.75 m
2073.44 282.5 l
2230.38 410.75 l
S
1916.5 710 m
2073.44 154.25 l
2230.38 710 l
S
9.9975 w
/DeviceGray {} CS
[0] SC
347.125 140 m
347.125 140 l
S
870.25 140 m
870.25 140 l
S
1393.38 604.551 m
1393.38 552.656 l
S
1916.5 650.148 m
1916.5 604.773 l
S
347.125 140 m
347.125 140 l
S
870.25 140 m
870.25 140 l
S
1393.38 604.551 m
1393.38 656.441 l
S
1916.5 650.148 m
1916.5 695.523 l
S
367.129 140 m
367.129 128.953 358.172 119.996 347.125 119.996 c
336.078 119.996 327.121 128.953 327.121 140 c
327.121 151.047 336.078 160.004 347.125 160.004 c
358.172 160.004 367.129 151.047 367.129 140 c
f
890.254 140 m
890.254 128.953 881.297 119.996 870.25 119.996 c
859.203 119.996 850.246 128.953 850.246 140 c
850.246 151.047 859.203 160.004 870.25 160.004 c
881.297 160.004 890.254 151.047 890.254 140 c
f
1413.38 604.551 m
1413.38 593.504 1404.42 584.547 1393.38 584.547 c
1382.33 584.547 1373.37 593.504 1373.37 604.551 c
1373.37 615.598 1382.33 624.551 1393.38 624.551 c
1404.42 624.551 1413.38 615.598 1413.38 604.551 c
f
1936.5 650.148 m
1936.5 639.102 1927.55 630.148 1916.5 630.148 c
1905.45 630.148 1896.5 639.102 1896.5 650.148 c
1896.5 661.199 1905.45 670.152 1916.5 670.152 c
1927.55 670.152 1936.5 661.199 1936.5 650.148 c
f
/DeviceRGB {} CS
[1 0 0] SC
504.063 140 m
504.063 140 l
S
1027.19 140 m
1027.19 140 l
S
1550.31 142.852 m
1550.31 140 l
S
2073.44 191.301 m
2073.44 168.059 l
S
504.063 140 m
504.063 140 l
S
1027.19 140 m
1027.19 140 l
S
1550.31 142.852 m
1550.31 145.699 l
S
2073.44 191.301 m
2073.44 214.543 l
S
/DeviceRGB {} cs
[1 0 0] sc
524.066 140 m
524.066 128.953 515.109 119.996 504.063 119.996 c
493.016 119.996 484.059 128.953 484.059 140 c
484.059 151.047 493.016 160.004 504.063 160.004 c
515.109 160.004 524.066 151.047 524.066 140 c
f
1047.19 140 m
1047.19 128.953 1038.23 119.996 1027.19 119.996 c
1016.14 119.996 1007.18 128.953 1007.18 140 c
1007.18 151.047 1016.14 160.004 1027.19 160.004 c
1038.23 160.004 1047.19 151.047 1047.19 140 c
f
1570.32 142.852 m
1570.32 131.801 1561.36 122.848 1550.31 122.848 c
1539.27 122.848 1530.31 131.801 1530.31 142.852 c
1530.31 153.898 1539.27 162.852 1550.31 162.852 c
1561.36 162.852 1570.32 153.898 1570.32 142.852 c
f
2093.44 191.301 m
2093.44 180.254 2084.48 171.297 2073.44 171.297 c
2062.39 171.297 2053.43 180.254 2053.43 191.301 c
2053.43 202.348 2062.39 211.301 2073.44 211.301 c
2084.48 211.301 2093.44 202.348 2093.44 191.301 c
f
/DeviceGray {} CS
[0.3999] SC
661 140 m
661 140 l
S
1184.13 142.852 m
1184.13 140 l
S
1707.25 504.801 m
1707.25 456.98 l
S
2230.38 550.398 m
2230.38 495.508 l
S
661 140 m
661 140 l
S
1184.13 142.852 m
1184.13 145.699 l
S
1707.25 504.801 m
1707.25 552.621 l
S
2230.38 550.398 m
2230.38 605.293 l
S
/DeviceGray {} cs
[0.3999] sc
681.004 140 m
681.004 128.953 672.047 119.996 661 119.996 c
649.953 119.996 640.996 128.953 640.996 140 c
640.996 151.047 649.953 160.004 661 160.004 c
672.047 160.004 681.004 151.047 681.004 140 c
f
1204.13 142.852 m
1204.13 131.801 1195.17 122.848 1184.13 122.848 c
1173.08 122.848 1164.12 131.801 1164.12 142.852 c
1164.12 153.898 1173.08 162.852 1184.13 162.852 c
1195.17 162.852 1204.13 153.898 1204.13 142.852 c
f
1727.25 504.801 m
1727.25 493.754 1718.3 484.797 1707.25 484.797 c
1696.2 484.797 1687.25 493.754 1687.25 504.801 c
1687.25 515.848 1696.2 524.801 1707.25 524.801 c
1718.3 524.801 1727.25 515.848 1727.25 504.801 c
f
2250.38 550.398 m
2250.38 539.352 2241.42 530.398 2230.38 530.398 c
2219.33 530.398 2210.37 539.352 2210.37 550.398 c
2210.37 561.449 2219.33 570.402 2230.38 570.402 c
2241.42 570.402 2250.38 561.449 2250.38 550.398 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font XGMHYL+Helvetica
%%EOF
