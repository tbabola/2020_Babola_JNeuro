%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.8.0.1323502 \\(R2020a\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 105 92
%%HiResBoundingBox: 0 0 105 92
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font KUCIET+Helvetica
%!FontType1-1.0: KUCIET+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2002) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /KUCIET+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 742 741] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 35 /numbersign put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 67 /C put
dup 72 /H put
dup 73 /I put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD35265922886A18E9B8
260359CC22A34B07B7820B5EB2056F38A5B89E61B9F1A2C8BFB909F826665D9E
6DE2FC917C0D89DF9C79753975A0E3FC97A7BE29FD0A4CF998E787D83E90EF4E
5F3FC2B68AA739125371CBFDF5BCFA2F78DC434D6DCB33C9DAC7B4AB349FA7C7
853EDF0D6BE9A45CA58D8822BF04B4266D68440D5F09857AE3A32563B831E7ED
58E08E65F02E257F1A1BE1ECC957D966DE8544BAA6BC3F312D23B368D3A4C809
9A0EF7B3992B6E50BA6430FF1ECD4B35E619E02BE006FCB599E2EF6847976662
BDFE4F4DCBF97AFCC8E9C1D74DA6220D47A2915D14032BCA379E18107159D8AE
C801B037B8AB8BDC6D60CBDFEF9DC56ED08D7CBF8A4CC216541432CD03F9B92C
4286E9B9035DA6A297428D629C63EC4710833219E7683E5436DE8954BCEB6409
EC9B5F09C7940D77A0855113C4FD2C91F8D829517B7719BD22E971F98F8254E6
07F304C6384DD627D2A25AD5B57577CDB7C1ADECECC039D5506ACD6891C5A839
C9700CB56BAFACB22EDB813EFD6D5EA75841D6C6E2BD342711248E15F11FE4AE
D1D3CFFB2B0168D42C0974BD49CA65CB39C1C872FF51691E25B0197B28717409
DD1EA7F6428A690271C93935545384788A63A2D7C711D7EC27390B635E741FD2
C23E89B32EBC2FB753B1CF2692B5F44B56550992FA59289A6FE78E185C126967
A47F0E0448D80E9FC2BBF866464366E50618659215A8643213999881D62D990F
18DCF98BBB77B9C1440063CEA77AFEFAB3BB5EDAB2120DF1B1750AE98614626A
301D2CADB2AAA7ECD87CDD47FA0A590E458A1F117366C4448AEEC6B0E9074884
BC1C0E4AA0A3CBDC58A2D6CC9EFDD99D1434334028DE235387EAA86E1CF4092F
C5648319461BDA85E68365744E654CF74A4D9675D6757D9B3CA14636509DC9A9
24371522ADD256BE03725C0998EAF50677D8BDC03753DA30456159DB7C24A08A
BD6DA607601581AA58B021B2BF0D3BC241F1D3C9B70C2D0F5ADA3F3F380BF78C
765BB3DBAD33B5B60E0ABC1851FBF843C379E4EABFC3487B7239FF62FB1D10C0
C6B19A857A7F631E61905D5DAE1A3E6905579A905FDDA50EFFB79AB8DF86AA68
6FA05ECE15379BFA24D70644F122270CDABDBA980920A02D2B793C8C3EEF5562
5328A20FCC11D6B41C7755F6AA8C01AE97151358386C38E0E43402E31978F280
69E8C437BC3D40EE59872A201295C5926A0C4D34CCFBD5E2C747C666A2CDB833
AE3D6F017A61E46393A2B9E4B585C07071E86A7E9E009477AA51F2C6FE16B4BA
12A42AD7FAA4A001F8FE44DB4D24DA769BF3A161C4C83C2AE21929A51A6FDFCE
801767392B0D88B0BF9095FC8D78950541C24985A2128A48FFF9D623D63AFF99
76D17010FD1EBDC2B77E24BC8A22701E54FDAF6B2B206F27EB092E94A54FC6C3
B6D664290CD305E2DF2131FA6162C799DE81FCFC29E27EA2E6EBD9BF20B8199D
DD2F0925E9508DCEF8D0DDE69EB288B4BD4B92658358CDE08A9DB86573F5F313
A445D64F41161B8C937C70B6C842A7C02FA34C8840271B070DC1C6B0864B72F0
7F41766792CE2747D3FC9889E61CBE64FB6E7107856D092C3923DA53C48C7AF5
94F404E6802EE549DC80D8B25FB3A616EF9E8A10579844814CF638E5DFB4F833
2BCF00479A71CEF7C75C8C8B4F5BE4BC1C8B045652F5619C53892C2DBE99E674
32EBD678ABAA4DD75324CBB38EA7D1B4B10DD311EA54A30C97707E19178F71C1
069732422D57A0C50871870162E7BEA40434E38CF85342D6959EC202FAFE7FAA
297AD77F160CFF0168ED15A48C4F93610409AA0802B485F65C014F01240172D8
980724F0FDA56E7B557DE5AF1BCCE0BD28FE6B998D320C28DA69535234067980
0BA9D6BC47F6C9180C4170A94A593F07C13A0409489916DD7F0B8295F7C6B6A1
B3C2B0DC1CD2F52232C819201483D1FE0600DE0651C8CB31BF71934F05DE1F08
EB549CB4703342A875DCF7A74BFC12800B4F28764AEA9E41B73D6B0C0EB5553F
590EB40E8B8CA3CA9DBD636183177FFC715F518DA27BFF0F6657AA0B22418D13
FCA6BF3E8C6F6004682677B4360270688A7C1080F53CB3E56ECD526CBA1B35CE
F19AC27F75D008BCF54F71666022C47E82F720C6FD8D5ED583CEEB80B7F25558
A62F87409937196218A2BF916BCC6C1F50AE9B9CDD49CF5ED4731E7EC52C390B
5DB86E81739B6391E21AE755A08E12D61DFD7D105D152780EE4BCE85502BDC9A
134C77EDEB0CB694D2C5811F861E9C12EC2ABAE46F730267DFC4EDA965D342FC
D2C1A4F4150BBA0AF82D3A6227E9CB4ABA1F681F82406894DEC4399DBD2DCDDB
C0DD43B1529A52B3D8E53E6FCF62E585BCED4F093B6801A0BA283E6EDF7CBCA1
8B801F598E585B46DA89CF953BCFD9246609CB590FEC6BC8BC1C945BA6CA1D73
7ED9F546F2D4E45FD45B25BBF08E513F4CBC79CAA4A915E5A39D6E9D61E02305
DF58EA77D7867534FF87EA2070A8545E132F4DCA704B8D5D6C99C25D4CAAE213
208D92287B8E728A2A7E65B172CD332E49150C7C15058D83E2700122D669E24C
6A08BEA0B620AB74A78930571BDB78414C05AB4894F9E7C65F4FCCD5DD415CC1
104BA40E054A14DD31EB1B311344F08CD515EA90FA428B8D585A4C3A3D7AFBE1
3B0F98438120C5166138DC95DF3C892E95FF1729643520B968B8D6579BB02586
0620BABB89471AF6B586FB99AEF2BB3E9AF0C35A36576664F04DF2D8CB31E29E
DDAA5D92272A4503A2A92052BB05511E397B19BC446417F8BD8223AA46BF4B4B
5A1FE5E922F0A7B47FE1F3951EFA2D46DBE24CC0FFA3B3EFB78EE4A6B1617DC2
3B19CF2B9E38BF26D236535C324C060E41D1D01127606C523CF84F8A9FB6F214
C3691670C600940397B875E5F9016D6EAABF88C136047CB82C7C2CE4B7F4B6ED
CE1E2DF6ABD288D2776A7B62F88FD0CAA3611F717F819B125458A64F07C279E2
E172DB6B1C51A162E56F743757239A36F721E84148EE683D3AD25C8AD22B6603
BDC548D9BCB5CB9131EEB53F6BD4DD78657BC00C976908577FC83E2AEBC78A68
53E0D3F9944CDCF251EA8CFD241F1DFB94A271F5D117C17CE16F0F5DB24AEEBD
0AEF620E01D6498368AF3F48228A9F479D29530F678915DE79CD0053D29B1F36
77966A15AF7DE27AA69787E385A46DD4A25A00BF39FBB477D236BDD4CCB8B8BC
375A364E9E440C2E97E850E2F03886021B0B63D478922F41E9087096C3173F2E
FC0A199EA5ADF130B4539E1591B4C1C759F55F2901501815CB4BF8CE26A0BFEE
843E8B7BDD7B6A0D1EB035BA81EF4FBAAF90894F17AAD77D12182A588359B770
9D703C0F538FEF8E530C0910E06C2903BCC07CDEE1AD78EBCCBA821874B764DF
FDE505915F4DCA5D376D2C0159AF8EE9A50001393989F6AC757FC7CC73552569
C073A9876932192C0DFAD88B84C8E1D41B6A2F9B5B342BAC567F98FAC37422FE
B9748E6E2AD47BF02C812908F0E1919A8371FB7FBD6C297A0E1EB67D42A528CC
93CC0090578B32E41BE6783D30AAC4FCC7FC84BE8776793BF73C58A76DDDAA41
2B310E14AF230CDA8346E6F70680BE627D6B1979329671CE12D5423760FAA3F8
C6A6A2D9B5E53DCC81ADC4F75D85C8A27E69DBDB17B7C00273FE8311D2A8F6A1
E2BC78BBC5E3FC7A39783565E84FF28F4E8155405F036946B7D6FC787B7BD574
01D8802DC55280D07B02FF20AE9D29F765D2619756062D24E2C81955192826D1
2FB3CB81159FE10D4E2B837B59046D07668B79DF29D5A9E42333AEA73815F7AD
76F8D5DD615116FE60E63CD6FD779DB3AC0D9B043CD715F685FBDB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /KUCIET+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 105 92 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 10 1040 910 re
f
10 10 1040 910 re
f
220 212.176 765 666.434 re
f
7.494 w
2 J
1 j
/DeviceGray {} CS
[0] SC
q
[1.0008 0 0 -0.999199 0 0] cm
219.824 -212.346 m
984.212 -212.346 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
219.824 -212.346 m
219.824 -204.726 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
410.921 -212.346 m
410.921 -204.726 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
602.018 -212.346 m
602.018 -204.726 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
793.115 -212.346 m
793.115 -204.726 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
984.212 -212.346 m
984.212 -204.726 l
S
Q
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1.0016 0 0 1 19.75 12.3191] Tm
0 0 Td
/F8_0 6.98855 Tf
(0)
[3.885634
0] Tj
-1908.37 TJm
(20)
[3.885634
0
3.885634
0] Tj
-1620.24 TJm
(40)
[3.885634
0
3.885634
0] Tj
-1620.24 TJm
(60)
[3.885634
0
3.885634
0] Tj
-1620.24 TJm
(80)
[3.885634
0
3.885634
0] Tj
[1.0016 0 0 1 18.25 3.31602] Tm
0 0 Td
/F8_0 7.98745 Tf
(# of ISC ROIs activated)
[4.441022
0
2.220511
0
4.441022
0
2.220511
0
2.220511
0
2.220511
0
5.327629
0
5.766939
0
2.220511
0
5.766939
0
6.214236
0
2.220511
0
3.993725
0
2.220511
0
4.441022
0
3.993725
0
2.220511
0
1.773214
0
3.993725
0
4.441022
0
2.220511
0
4.441022
0
4.441022
0] Tj
Q
q
[1.0008 0 0 -0.999199 0 0] cm
219.824 -212.346 m
219.824 -879.313 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
219.824 -212.346 m
212.201 -212.346 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
219.824 -379.089 m
212.201 -379.089 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
219.824 -545.828 m
212.201 -545.828 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
219.824 -712.571 m
212.201 -712.571 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
219.824 -879.313 m
212.201 -879.313 l
S
Q
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1.0016 0 0 1 15.3375 18.5969] Tm
0 0 Td
/F8_0 6.98855 Tf
(0)
[3.885634
0] Tj
-3.744 16.6605 Td
(20)
[3.885634
0
3.885634
0] Tj
-3.744 33.3214 Td
(40)
[3.885634
0
3.885634
0] Tj
-3.744 49.9823 Td
(60)
[3.885634
0
3.885634
0] Tj
-3.744 66.6428 Td
(80)
[3.885634
0
3.885634
0] Tj
[0 0.9984 -1 0 8.56992 20.4688] Tm
0 0 Td
/F8_0 8.00025 Tf
(# of IHCs activated)
[4.448139
0
2.22407
0
4.448139
0
2.22407
0
2.22407
0
2.22407
0
5.776181
0
5.776181
0
4.000125
0
2.22407
0
4.448139
0
4.000125
0
2.22407
0
1.776055
0
4.000125
0
4.448139
0
2.22407
0
4.448139
0
4.448139
0] Tj
Q
4.9985 w
0 J
/DeviceGray {} CS
[0.7012] SC
q
[1.0008 0 0 -0.999199 0 0] cm
219.824 -212.346 m
229.379 -232.948 l
238.934 -253.547 l
248.489 -274.149 l
258.043 -294.752 l
267.598 -315.35 l
277.153 -335.953 l
286.708 -356.559 l
296.263 -377.161 l
305.818 -397.764 l
315.373 -418.362 l
324.927 -438.965 l
334.482 -459.567 l
344.037 -480.166 l
353.592 -500.768 l
363.147 -521.371 l
372.702 -541.969 l
382.256 -562.572 l
391.811 -583.17 l
401.366 -603.772 l
410.921 -624.383 l
420.476 -644.981 l
430.031 -665.584 l
439.586 -686.186 l
449.14 -706.785 l
458.695 -727.387 l
468.25 -747.986 l
477.805 -768.588 l
487.36 -789.19 l
496.915 -809.789 l
506.47 -830.391 l
516.024 -850.994 l
525.579 -871.592 l
529.19 -879.396 l
S
Q
/DeviceGray {} cs
[0.7012] sc
428.68 836.957 m
428.68 832.844 425.34 829.512 421.223 829.512 c
417.105 829.512 413.77 832.844 413.77 836.957 c
413.77 841.066 417.105 844.398 421.223 844.398 c
425.34 844.398 428.68 841.066 428.68 836.957 c
f
313.855 612.035 m
313.855 607.926 310.52 604.594 306.402 604.594 c
302.281 604.594 298.945 607.926 298.945 612.035 c
298.945 616.145 302.281 619.477 306.402 619.477 c
310.52 619.477 313.855 616.145 313.855 612.035 c
f
246.324 387.113 m
246.324 383.004 242.988 379.672 238.871 379.672 c
234.754 379.672 231.414 383.004 231.414 387.113 c
231.414 391.227 234.754 394.559 238.871 394.559 c
242.988 394.559 246.324 391.227 246.324 387.113 c
f
255.164 428.766 m
255.164 424.656 251.828 421.324 247.711 421.324 c
243.59 421.324 240.254 424.656 240.254 428.766 c
240.254 432.879 243.59 436.211 247.711 436.211 c
251.828 436.211 255.164 432.879 255.164 428.766 c
f
255.871 212.176 m
255.871 208.066 252.535 204.734 248.414 204.734 c
244.297 204.734 240.961 208.066 240.961 212.176 c
240.961 216.285 244.297 219.617 248.414 219.617 c
252.535 219.617 255.871 216.285 255.871 212.176 c
f
359.457 478.75 m
359.457 474.637 356.117 471.305 352 471.305 c
347.883 471.305 344.547 474.637 344.547 478.75 c
344.547 482.859 347.883 486.191 352 486.191 c
356.117 486.191 359.457 482.859 359.457 478.75 c
f
256.559 287.148 m
256.559 283.039 253.223 279.707 249.105 279.707 c
244.984 279.707 241.648 283.039 241.648 287.148 c
241.648 291.262 244.984 294.594 249.105 294.594 c
253.223 294.594 256.559 291.262 256.559 287.148 c
f
257.895 212.176 m
257.895 208.066 254.559 204.734 250.438 204.734 c
246.32 204.734 242.984 208.066 242.984 212.176 c
242.984 216.285 246.32 219.617 250.438 219.617 c
254.559 219.617 257.895 216.285 257.895 212.176 c
f
302.406 337.133 m
302.406 333.02 299.07 329.688 294.953 329.688 c
290.836 329.688 287.496 333.02 287.496 337.133 c
287.496 341.242 290.836 344.574 294.953 344.574 c
299.07 344.574 302.406 341.242 302.406 337.133 c
f
244.805 320.473 m
244.805 316.359 241.465 313.027 237.348 313.027 c
233.23 313.027 229.895 316.359 229.895 320.473 c
229.895 324.582 233.23 327.914 237.348 327.914 c
241.465 327.914 244.805 324.582 244.805 320.473 c
f
410.621 545.391 m
410.621 541.281 407.281 537.949 403.164 537.949 c
399.047 537.949 395.711 541.281 395.711 545.391 c
395.711 549.504 399.047 552.836 403.164 552.836 c
407.281 552.836 410.621 549.504 410.621 545.391 c
f
283.863 387.113 m
283.863 383.004 280.523 379.672 276.406 379.672 c
272.289 379.672 268.953 383.004 268.953 387.113 c
268.953 391.227 272.289 394.559 276.406 394.559 c
280.523 394.559 283.863 391.227 283.863 387.113 c
f
263.828 470.418 m
263.828 466.309 260.488 462.977 256.371 462.977 c
252.254 462.977 248.918 466.309 248.918 470.418 c
248.918 474.531 252.254 477.863 256.371 477.863 c
260.488 477.863 263.828 474.531 263.828 470.418 c
f
314.723 620.367 m
314.723 616.254 311.383 612.922 307.266 612.922 c
303.148 612.922 299.813 616.254 299.813 620.367 c
299.813 624.477 303.148 627.809 307.266 627.809 c
311.383 627.809 314.723 624.477 314.723 620.367 c
f
254.766 220.508 m
254.766 216.395 251.43 213.063 247.313 213.063 c
243.195 213.063 239.855 216.395 239.855 220.508 c
239.855 224.617 243.195 227.949 247.313 227.949 c
251.43 227.949 254.766 224.617 254.766 220.508 c
f
276.719 387.113 m
276.719 383.004 273.383 379.672 269.266 379.672 c
265.148 379.672 261.809 383.004 261.809 387.113 c
261.809 391.227 265.148 394.559 269.266 394.559 c
273.383 394.559 276.719 391.227 276.719 387.113 c
f
254.594 303.809 m
254.594 299.699 251.258 296.367 247.141 296.367 c
243.023 296.367 239.684 299.699 239.684 303.809 c
239.684 307.922 243.023 311.254 247.141 311.254 c
251.258 311.254 254.594 307.922 254.594 303.809 c
f
246.016 220.508 m
246.016 216.395 242.68 213.063 238.563 213.063 c
234.445 213.063 231.105 216.395 231.105 220.508 c
231.105 224.617 234.445 227.949 238.563 227.949 c
242.68 227.949 246.016 224.617 246.016 220.508 c
f
333 245.496 m
333 241.387 329.664 238.055 325.543 238.055 c
321.426 238.055 318.09 241.387 318.09 245.496 c
318.09 249.609 321.426 252.941 325.543 252.941 c
329.664 252.941 333 249.609 333 245.496 c
f
256.469 520.402 m
256.469 516.289 253.129 512.957 249.012 512.957 c
244.895 512.957 241.559 516.289 241.559 520.402 c
241.559 524.512 244.895 527.844 249.012 527.844 c
253.129 527.844 256.469 524.512 256.469 520.402 c
f
266.348 487.078 m
266.348 482.969 263.008 479.637 258.891 479.637 c
254.773 479.637 251.438 482.969 251.438 487.078 c
251.438 491.191 254.773 494.523 258.891 494.523 c
263.008 494.523 266.348 491.191 266.348 487.078 c
f
266.27 395.445 m
266.27 391.332 262.934 388 258.816 388 c
254.699 388 251.359 391.332 251.359 395.445 c
251.359 399.555 254.699 402.887 258.816 402.887 c
262.934 402.887 266.27 399.555 266.27 395.445 c
f
380.199 562.055 m
380.199 557.941 376.863 554.609 372.746 554.609 c
368.629 554.609 365.289 557.941 365.289 562.055 c
365.289 566.164 368.629 569.496 372.746 569.496 c
376.863 569.496 380.199 566.164 380.199 562.055 c
f
254.766 212.176 m
254.766 208.066 251.426 204.734 247.309 204.734 c
243.191 204.734 239.855 208.066 239.855 212.176 c
239.855 216.285 243.191 219.617 247.309 219.617 c
251.426 219.617 254.766 216.285 254.766 212.176 c
f
257.105 212.176 m
257.105 208.066 253.77 204.734 249.652 204.734 c
245.535 204.734 242.195 208.066 242.195 212.176 c
242.195 216.285 245.535 219.617 249.652 219.617 c
253.77 219.617 257.105 216.285 257.105 212.176 c
f
245.594 520.402 m
245.594 516.289 242.254 512.957 238.137 512.957 c
234.02 512.957 230.684 516.289 230.684 520.402 c
230.684 524.512 234.02 527.844 238.137 527.844 c
242.254 527.844 245.594 524.512 245.594 520.402 c
f
457.531 645.355 m
457.531 641.246 454.191 637.914 450.074 637.914 c
445.957 637.914 442.621 641.246 442.621 645.355 c
442.621 649.469 445.957 652.801 450.074 652.801 c
454.191 652.801 457.531 649.469 457.531 645.355 c
f
276.633 287.148 m
276.633 283.039 273.297 279.707 269.18 279.707 c
265.063 279.707 261.723 283.039 261.723 287.148 c
261.723 291.262 265.063 294.594 269.18 294.594 c
273.297 294.594 276.633 291.262 276.633 287.148 c
f
292.801 270.488 m
292.801 266.379 289.465 263.047 285.348 263.047 c
281.23 263.047 277.895 266.379 277.895 270.488 c
277.895 274.602 281.23 277.934 285.348 277.934 c
289.465 277.934 292.801 274.602 292.801 270.488 c
f
267.512 320.473 m
267.512 316.359 264.172 313.027 260.055 313.027 c
255.938 313.027 252.602 316.359 252.602 320.473 c
252.602 324.582 255.938 327.914 260.055 327.914 c
264.172 327.914 267.512 324.582 267.512 320.473 c
f
311.727 428.766 m
311.727 424.656 308.387 421.324 304.27 421.324 c
300.152 421.324 296.816 424.656 296.816 428.766 c
296.816 432.879 300.152 436.211 304.27 436.211 c
308.387 436.211 311.727 432.879 311.727 428.766 c
f
q
[1.0008 0 0 -0.999199 0 0] cm
219.824 -212.346 m
229.379 -235.493 l
238.934 -258.645 l
248.489 -281.784 l
258.043 -304.936 l
267.598 -328.083 l
277.153 -351.23 l
286.708 -374.374 l
296.263 -397.521 l
305.818 -420.673 l
315.373 -443.82 l
324.927 -466.972 l
334.482 -490.111 l
344.037 -513.259 l
353.592 -536.41 l
363.147 -559.557 l
372.702 -582.701 l
382.256 -605.848 l
391.811 -628.996 l
401.366 -652.147 l
410.921 -675.295 l
420.476 -698.438 l
430.031 -721.586 l
439.586 -744.733 l
449.14 -767.884 l
458.695 -791.024 l
468.25 -814.175 l
477.805 -837.323 l
487.36 -860.47 l
495.17 -879.396 l
S
Q
266.988 212.176 m
266.988 208.066 263.652 204.734 259.535 204.734 c
255.418 204.734 252.078 208.066 252.078 212.176 c
252.078 216.285 255.418 219.617 259.535 219.617 c
263.652 219.617 266.988 216.285 266.988 212.176 c
f
273.547 220.508 m
273.547 216.395 270.207 213.063 266.09 213.063 c
261.973 213.063 258.637 216.395 258.637 220.508 c
258.637 224.617 261.973 227.949 266.09 227.949 c
270.207 227.949 273.547 224.617 273.547 220.508 c
f
313.691 345.461 m
313.691 341.352 310.355 338.02 306.238 338.02 c
302.121 338.02 298.781 341.352 298.781 345.461 c
298.781 349.574 302.121 352.906 306.238 352.906 c
310.355 352.906 313.691 349.574 313.691 345.461 c
f
334.336 403.773 m
334.336 399.664 331 396.332 326.883 396.332 c
322.766 396.332 319.426 399.664 319.426 403.773 c
319.426 407.887 322.766 411.219 326.883 411.219 c
331 411.219 334.336 407.887 334.336 403.773 c
f
284.148 220.508 m
284.148 216.395 280.809 213.063 276.691 213.063 c
272.574 213.063 269.238 216.395 269.238 220.508 c
269.238 224.617 272.574 227.949 276.691 227.949 c
280.809 227.949 284.148 224.617 284.148 220.508 c
f
314.691 437.098 m
314.691 432.984 311.352 429.652 307.234 429.652 c
303.117 429.652 299.781 432.984 299.781 437.098 c
299.781 441.207 303.117 444.539 307.234 444.539 c
311.352 444.539 314.691 441.207 314.691 437.098 c
f
266.094 220.508 m
266.094 216.395 262.754 213.063 258.637 213.063 c
254.52 213.063 251.184 216.395 251.184 220.508 c
251.184 224.617 254.52 227.949 258.637 227.949 c
262.754 227.949 266.094 224.617 266.094 220.508 c
f
238.125 212.176 m
238.125 208.066 234.789 204.734 230.672 204.734 c
226.555 204.734 223.215 208.066 223.215 212.176 c
223.215 216.285 226.555 219.617 230.672 219.617 c
234.789 219.617 238.125 216.285 238.125 212.176 c
f
247.723 212.176 m
247.723 208.066 244.387 204.734 240.27 204.734 c
236.152 204.734 232.813 208.066 232.813 212.176 c
232.813 216.285 236.152 219.617 240.27 219.617 c
244.387 219.617 247.723 216.285 247.723 212.176 c
f
263.98 228.836 m
263.98 224.727 260.645 221.395 256.527 221.395 c
252.41 221.395 249.07 224.727 249.07 228.836 c
249.07 232.949 252.41 236.281 256.527 236.281 c
260.645 236.281 263.98 232.949 263.98 228.836 c
f
245.75 278.82 m
245.75 274.707 242.414 271.375 238.297 271.375 c
234.18 271.375 230.84 274.707 230.84 278.82 c
230.84 282.93 234.18 286.262 238.297 286.262 c
242.414 286.262 245.75 282.93 245.75 278.82 c
f
333.23 437.098 m
333.23 432.984 329.891 429.652 325.773 429.652 c
321.656 429.652 318.32 432.984 318.32 437.098 c
318.32 441.207 321.656 444.539 325.773 444.539 c
329.891 444.539 333.23 441.207 333.23 437.098 c
f
342.164 528.73 m
342.164 524.621 338.828 521.289 334.711 521.289 c
330.594 521.289 327.254 524.621 327.254 528.73 c
327.254 532.844 330.594 536.176 334.711 536.176 c
338.828 536.176 342.164 532.844 342.164 528.73 c
f
296.199 603.703 m
296.199 599.594 292.863 596.262 288.746 596.262 c
284.629 596.262 281.293 599.594 281.293 603.703 c
281.293 607.816 284.629 611.148 288.746 611.148 c
292.863 611.148 296.199 607.816 296.199 603.703 c
f
314.469 212.176 m
314.469 208.066 311.129 204.734 307.012 204.734 c
302.895 204.734 299.559 208.066 299.559 212.176 c
299.559 216.285 302.895 219.617 307.012 219.617 c
311.129 219.617 314.469 216.285 314.469 212.176 c
f
304.215 395.445 m
304.215 391.332 300.879 388 296.758 388 c
292.641 388 289.305 391.332 289.305 395.445 c
289.305 399.555 292.641 402.887 296.758 402.887 c
300.879 402.887 304.215 399.555 304.215 395.445 c
f
274.5 328.801 m
274.5 324.691 271.16 321.359 267.043 321.359 c
262.926 321.359 259.59 324.691 259.59 328.801 c
259.59 332.914 262.926 336.246 267.043 336.246 c
271.16 336.246 274.5 332.914 274.5 328.801 c
f
283.898 470.418 m
283.898 466.309 280.559 462.977 276.441 462.977 c
272.324 462.977 268.988 466.309 268.988 470.418 c
268.988 474.531 272.324 477.863 276.441 477.863 c
280.559 477.863 283.898 474.531 283.898 470.418 c
f
324.559 387.113 m
324.559 383.004 321.223 379.672 317.105 379.672 c
312.984 379.672 309.648 383.004 309.648 387.113 c
309.648 391.227 312.984 394.559 317.105 394.559 c
321.223 394.559 324.559 391.227 324.559 387.113 c
f
246.375 245.496 m
246.375 241.387 243.039 238.055 238.922 238.055 c
234.805 238.055 231.465 241.387 231.465 245.496 c
231.465 249.609 234.805 252.941 238.922 252.941 c
243.039 252.941 246.375 249.609 246.375 245.496 c
f
276.477 270.488 m
276.477 266.379 273.137 263.047 269.02 263.047 c
264.902 263.047 261.566 266.379 261.566 270.488 c
261.566 274.602 264.902 277.934 269.02 277.934 c
273.137 277.934 276.477 274.602 276.477 270.488 c
f
292.855 220.508 m
292.855 216.395 289.52 213.063 285.402 213.063 c
281.285 213.063 277.945 216.395 277.945 220.508 c
277.945 224.617 281.285 227.949 285.402 227.949 c
289.52 227.949 292.855 224.617 292.855 220.508 c
f
362.707 553.723 m
362.707 549.613 359.367 546.281 355.25 546.281 c
351.133 546.281 347.797 549.613 347.797 553.723 c
347.797 557.832 351.133 561.164 355.25 561.164 c
359.367 561.164 362.707 557.832 362.707 553.723 c
f
283.023 678.68 m
283.023 674.566 279.688 671.234 275.566 671.234 c
271.449 671.234 268.113 674.566 268.113 678.68 c
268.113 682.789 271.449 686.121 275.566 686.121 c
279.688 686.121 283.023 682.789 283.023 678.68 c
f
267.23 262.16 m
267.23 258.047 263.895 254.715 259.777 254.715 c
255.66 254.715 252.32 258.047 252.32 262.16 c
252.32 266.27 255.66 269.602 259.777 269.602 c
263.895 269.602 267.23 266.27 267.23 262.16 c
f
q
[1.0008 0 0 -0.999199 0 0] cm
219.824 -212.346 m
229.379 -233.308 l
238.934 -254.274 l
248.489 -275.236 l
258.043 -296.198 l
267.598 -317.164 l
277.153 -338.126 l
286.708 -359.084 l
296.263 -380.054 l
305.818 -401.016 l
315.373 -421.982 l
324.927 -442.944 l
334.482 -463.907 l
344.037 -484.873 l
353.592 -505.835 l
363.147 -526.793 l
372.702 -547.763 l
382.256 -568.725 l
391.811 -589.683 l
401.366 -610.653 l
410.921 -631.611 l
420.476 -652.573 l
430.031 -673.543 l
439.586 -694.501 l
449.14 -715.471 l
458.695 -736.433 l
468.25 -757.392 l
477.805 -778.361 l
487.36 -799.32 l
496.915 -820.282 l
506.47 -841.252 l
516.024 -862.21 l
523.854 -879.396 l
S
Q
466.609 437.098 m
466.609 432.984 463.273 429.652 459.156 429.652 c
455.039 429.652 451.699 432.984 451.699 437.098 c
451.699 441.207 455.039 444.539 459.156 444.539 c
463.273 444.539 466.609 441.207 466.609 437.098 c
f
273.816 320.473 m
273.816 316.359 270.477 313.027 266.359 313.027 c
262.242 313.027 258.906 316.359 258.906 320.473 c
258.906 324.582 262.242 327.914 266.359 327.914 c
270.477 327.914 273.816 324.582 273.816 320.473 c
f
235.785 278.82 m
235.785 274.707 232.449 271.375 228.332 271.375 c
224.211 271.375 220.875 274.707 220.875 278.82 c
220.875 282.93 224.211 286.262 228.332 286.262 c
232.449 286.262 235.785 282.93 235.785 278.82 c
f
409.93 478.75 m
409.93 474.637 406.594 471.305 402.477 471.305 c
398.359 471.305 395.02 474.637 395.02 478.75 c
395.02 482.859 398.359 486.191 402.477 486.191 c
406.594 486.191 409.93 482.859 409.93 478.75 c
f
257.41 320.473 m
257.41 316.359 254.074 313.027 249.953 313.027 c
245.836 313.027 242.5 316.359 242.5 320.473 c
242.5 324.582 245.836 327.914 249.953 327.914 c
254.074 327.914 257.41 324.582 257.41 320.473 c
f
235.238 295.48 m
235.238 291.367 231.902 288.035 227.785 288.035 c
223.664 288.035 220.328 291.367 220.328 295.48 c
220.328 299.59 223.664 302.922 227.785 302.922 c
231.902 302.922 235.238 299.59 235.238 295.48 c
f
247.566 312.141 m
247.566 308.031 244.23 304.699 240.109 304.699 c
235.992 304.699 232.656 308.031 232.656 312.141 c
232.656 316.25 235.992 319.582 240.109 319.582 c
244.23 319.582 247.566 316.25 247.566 312.141 c
f
391.766 412.105 m
391.766 407.996 388.43 404.664 384.313 404.664 c
380.195 404.664 376.855 407.996 376.855 412.105 c
376.855 416.215 380.195 419.547 384.313 419.547 c
388.43 419.547 391.766 416.215 391.766 412.105 c
f
265.105 270.488 m
265.105 266.379 261.766 263.047 257.648 263.047 c
253.531 263.047 250.195 266.379 250.195 270.488 c
250.195 274.602 253.531 277.934 257.648 277.934 c
261.766 277.934 265.105 274.602 265.105 270.488 c
f
256.672 212.176 m
256.672 208.066 253.332 204.734 249.215 204.734 c
245.098 204.734 241.762 208.066 241.762 212.176 c
241.762 216.285 245.098 219.617 249.215 219.617 c
253.332 219.617 256.672 216.285 256.672 212.176 c
f
245.98 228.836 m
245.98 224.727 242.641 221.395 238.523 221.395 c
234.406 221.395 231.07 224.727 231.07 228.836 c
231.07 232.949 234.406 236.281 238.523 236.281 c
242.641 236.281 245.98 232.949 245.98 228.836 c
f
350.684 478.75 m
350.684 474.637 347.344 471.305 343.227 471.305 c
339.109 471.305 335.773 474.637 335.773 478.75 c
335.773 482.859 339.109 486.191 343.227 486.191 c
347.344 486.191 350.684 482.859 350.684 478.75 c
f
429.363 437.098 m
429.363 432.984 426.023 429.652 421.906 429.652 c
417.789 429.652 414.453 432.984 414.453 437.098 c
414.453 441.207 417.789 444.539 421.906 444.539 c
426.023 444.539 429.363 441.207 429.363 437.098 c
f
276.121 428.766 m
276.121 424.656 272.785 421.324 268.664 421.324 c
264.547 421.324 261.211 424.656 261.211 428.766 c
261.211 432.879 264.547 436.211 268.664 436.211 c
272.785 436.211 276.121 432.879 276.121 428.766 c
f
503.922 553.723 m
503.922 549.613 500.586 546.281 496.465 546.281 c
492.348 546.281 489.012 549.613 489.012 553.723 c
489.012 557.832 492.348 561.164 496.465 561.164 c
500.586 561.164 503.922 557.832 503.922 553.723 c
f
246.895 545.391 m
246.895 541.281 243.559 537.949 239.441 537.949 c
235.324 537.949 231.984 541.281 231.984 545.391 c
231.984 549.504 235.324 552.836 239.441 552.836 c
243.559 552.836 246.895 549.504 246.895 545.391 c
f
246.277 212.176 m
246.277 208.066 242.941 204.734 238.824 204.734 c
234.707 204.734 231.367 208.066 231.367 212.176 c
231.367 216.285 234.707 219.617 238.824 219.617 c
242.941 219.617 246.277 216.285 246.277 212.176 c
f
331.082 237.168 m
331.082 233.055 327.746 229.723 323.629 229.723 c
319.508 229.723 316.172 233.055 316.172 237.168 c
316.172 241.277 319.508 244.609 323.629 244.609 c
327.746 244.609 331.082 241.277 331.082 237.168 c
f
244.758 245.496 m
244.758 241.387 241.422 238.055 237.305 238.055 c
233.188 238.055 229.848 241.387 229.848 245.496 c
229.848 249.609 233.188 252.941 237.305 252.941 c
241.422 252.941 244.758 249.609 244.758 245.496 c
f
294.359 262.16 m
294.359 258.047 291.02 254.715 286.902 254.715 c
282.785 254.715 279.449 258.047 279.449 262.16 c
279.449 266.27 282.785 269.602 286.902 269.602 c
291.02 269.602 294.359 266.27 294.359 262.16 c
f
370.043 445.426 m
370.043 441.316 366.707 437.984 362.59 437.984 c
358.473 437.984 355.133 441.316 355.133 445.426 c
355.133 449.539 358.473 452.871 362.59 452.871 c
366.707 452.871 370.043 449.539 370.043 445.426 c
f
370.281 320.473 m
370.281 316.359 366.941 313.027 362.824 313.027 c
358.707 313.027 355.371 316.359 355.371 320.473 c
355.371 324.582 358.707 327.914 362.824 327.914 c
366.941 327.914 370.281 324.582 370.281 320.473 c
f
398.766 437.098 m
398.766 432.984 395.43 429.652 391.313 429.652 c
387.195 429.652 383.855 432.984 383.855 437.098 c
383.855 441.207 387.195 444.539 391.313 444.539 c
395.43 444.539 398.766 441.207 398.766 437.098 c
f
293.133 503.738 m
293.133 499.629 289.797 496.297 285.68 496.297 c
281.563 496.297 278.223 499.629 278.223 503.738 c
278.223 507.852 281.563 511.184 285.68 511.184 c
289.797 511.184 293.133 507.852 293.133 503.738 c
f
246.195 212.176 m
246.195 208.066 242.855 204.734 238.738 204.734 c
234.621 204.734 231.285 208.066 231.285 212.176 c
231.285 216.285 234.621 219.617 238.738 219.617 c
242.855 219.617 246.195 216.285 246.195 212.176 c
f
285.586 237.168 m
285.586 233.055 282.25 229.723 278.133 229.723 c
274.012 229.723 270.676 233.055 270.676 237.168 c
270.676 241.277 274.012 244.609 278.133 244.609 c
282.25 244.609 285.586 241.277 285.586 237.168 c
f
321.945 703.668 m
321.945 699.559 318.609 696.227 314.492 696.227 c
310.375 696.227 307.035 699.559 307.035 703.668 c
307.035 707.781 310.375 711.113 314.492 711.113 c
318.609 711.113 321.945 707.781 321.945 703.668 c
f
361.965 395.445 m
361.965 391.332 358.629 388 354.512 388 c
350.395 388 347.055 391.332 347.055 395.445 c
347.055 399.555 350.395 402.887 354.512 402.887 c
358.629 402.887 361.965 399.555 361.965 395.445 c
f
236.801 237.168 m
236.801 233.055 233.461 229.723 229.344 229.723 c
225.227 229.723 221.891 233.055 221.891 237.168 c
221.891 241.277 225.227 244.609 229.344 244.609 c
233.461 244.609 236.801 241.277 236.801 237.168 c
f
q
[1.0008 0 0 -0.999199 0 0] cm
219.824 -212.346 m
229.379 -225.567 l
238.934 -238.785 l
248.489 -252.003 l
258.043 -265.224 l
267.598 -278.442 l
277.153 -291.655 l
286.708 -304.873 l
296.263 -318.095 l
305.818 -331.312 l
315.373 -344.534 l
324.927 -357.751 l
334.482 -370.973 l
344.037 -384.19 l
353.592 -397.412 l
363.147 -410.63 l
372.702 -423.851 l
382.256 -437.061 l
391.811 -450.282 l
401.366 -463.5 l
410.921 -476.718 l
420.476 -489.939 l
430.031 -503.157 l
439.586 -516.378 l
449.14 -529.596 l
458.695 -542.817 l
468.25 -556.035 l
477.805 -569.257 l
487.36 -582.466 l
496.915 -595.688 l
506.47 -608.906 l
516.024 -622.127 l
525.579 -635.345 l
535.134 -648.566 l
544.689 -661.784 l
554.244 -675.001 l
563.799 -688.223 l
573.353 -701.441 l
582.908 -714.662 l
592.463 -727.872 l
602.018 -741.093 l
611.573 -754.311 l
621.128 -767.533 l
630.683 -780.75 l
640.237 -793.972 l
649.792 -807.189 l
659.347 -820.411 l
668.902 -833.628 l
678.457 -846.85 l
688.012 -860.068 l
697.567 -873.281 l
701.981 -879.396 l
S
Q
/DeviceGray {} CS
[0] SC
q
[1.0008 0 0 -0.999199 0 0] cm
276.388 -348.744 m
268.227 -348.744 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
276.388 -348.744 m
284.55 -348.744 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
276.388 -348.744 m
276.388 -325.64 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
276.388 -348.744 m
276.388 -371.841 l
S
Q
/DeviceGray {} cs
[0] sc
288.281 348.461 m
288.281 342.027 283.051 336.809 276.609 336.809 c
270.168 336.809 264.941 342.027 264.941 348.461 c
264.941 354.895 270.168 360.113 276.609 360.113 c
283.051 360.113 288.281 354.895 288.281 348.461 c
f
q
[1.0008 0 0 -0.999199 0 0] cm
285.787 -399.523 m
275.506 -399.523 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
285.787 -399.523 m
296.068 -399.523 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
285.787 -399.523 m
285.787 -371.309 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
285.787 -399.523 m
285.787 -427.745 l
S
Q
297.684 399.207 m
297.684 392.773 292.453 387.555 286.012 387.555 c
279.57 387.555 274.344 392.773 274.344 399.207 c
274.344 405.641 279.57 410.859 286.012 410.859 c
292.453 410.859 297.684 405.641 297.684 399.207 c
f
q
[1.0008 0 0 -0.999199 0 0] cm
282.122 -343.74 m
275.541 -343.74 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
282.122 -343.74 m
288.702 -343.74 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
282.122 -343.74 m
282.122 -315.757 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
282.122 -343.74 m
282.122 -371.719 l
S
Q
294.016 343.465 m
294.016 337.031 288.789 331.813 282.348 331.813 c
275.906 331.813 270.676 337.031 270.676 343.465 c
270.676 349.895 275.906 355.113 282.348 355.113 c
288.789 355.113 294.016 349.895 294.016 343.465 c
f
q
[1.0008 0 0 -0.999199 0 0] cm
306.146 -360.973 m
291.938 -360.973 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
306.146 -360.973 m
320.357 -360.973 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
306.146 -360.973 m
306.146 -337.434 l
S
Q
q
[1.0008 0 0 -0.999199 0 0] cm
306.146 -360.973 m
306.146 -384.515 l
S
Q
318.063 360.688 m
318.063 354.254 312.836 349.035 306.391 349.035 c
299.949 349.035 294.723 354.254 294.723 360.688 c
294.723 367.117 299.949 372.34 306.391 372.34 c
312.836 372.34 318.063 367.117 318.063 360.688 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font KUCIET+Helvetica
%%EOF
