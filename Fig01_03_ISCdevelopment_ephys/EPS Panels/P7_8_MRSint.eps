%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.7.0.1216025 \\(R2019b\\) Update 1. Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 108 110
%%HiResBoundingBox: 0 0 108 110
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font IHUVTQ+Helvetica
%!FontType1-1.0: IHUVTQ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /IHUVTQ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 45 /hyphen put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9715CA72928BEE0164393313D2AF0707AE312143602591604078B3A1
7EEB1D3A78BDD38354EF4461106548CCC60CC8C59B11E2A5047375FC80FFA1CA
A9E26060BAB8A79A8A838C75CD1913A4BF8DA23A8C7ED8BF70C9E6A8027E4F7B
4C103CFAAD6DCA4C0AAE7BE95F8A80B326C26487DA148BD1B9B1DCB95B173DA2
81D838685716F6EF704AC0B178D750A16CE0CE98B766AD3F4253C8C9193D9522
56B762F582D69F8188C2F26015B145C49C768DE3A7631CF49234517CA2C45729
C835AA7024D58238431CE2E04E33B046E05310A0032E3F5AF434F001C7DABC87
EEA5E6AA459E45BA26828C51B841FE8F036BAF78517E863941B9ABC3976E7FB5
FBB757AA3B64B1396EA670D55482E2BC49E33BBDD5E878B6F946472934D9A643
255DAEA78EE7181D4C53427652975F25DD5D9E551E4AC70206ADC4BA551D6054
A3592DD21327EF14571AF259BD07B4671FB96D0531ADB9B9DE25B52E9985076E
39A82E33079D44B92BFD00D55AC4BDDF28462948ED6D70CEF6B36E8929575181
349288A73E69594352AA0E8A278D03B3DA8316379AC2DA28EEF8661F6B696AC1
C0EA3E565CB4585371BBA53F4A7B81BA9563510C1B2EA3EF3663AB43A476038A
94783938A70FB1F7DA39485F559F2FAB12DB62F05D8B08CD4FD674BACF56BB81
5B295E7CFB4103A98BA6C991BA0E1E78F5C93D74448115E37B54AE11F21145FB
8FD5C943F9C7E1EA7816D304A20F1435E7D74D84E8EC9DFA470C8B6B263C7157
D7233640412BFDD150AD73A3ABFEC7612CB97E9E46F2DBA4B35A78E71943919D
E78DD8327F23682F21109F7BE1D9D113D97590C2529339F7546CCB12EA851678
9496BB39568695D112A3864C2056029CC04179C91A20F74E8F3C64596E10DD7E
7B20ACA5D5714DABC1EF40DA54E3C726CCCF8C49F215BB46AF9AA0866AF8902C
6AADC1CC48ADA89EEFE94B190F7703F3D95F0B45ABE16877AA6E74713F57174A
60870E1E8A0234D3A62E33867539F0F9E90055ABACCAF10AB2B5785BCC734271
BE931192A0CB43F892B19C129EE9869EEFADC8B2148B38892D532C73106838B9
C5F56884A279A076C2C1545E5CBB297C11D534469B5B93E7FED763C92F44EDB7
A08FD7236995583376A8B7B2BBA7B34E7550F8D0F589BD9E7B8B32767123CD24
D16B2E2410BE6AE39676CBD8CE1E341E3B7FC3732059325CBA97799B61E37748
CE41A97FAA99BBC37316DD546D14B6717284D53C927C1224DF5C9C7F357C80FE
5C9210F5232F62D17CAA7CE14D00EF3C959167A1ABD7AF0CA6D8EAFB4D101BE0
A0FD314B0C5BCE847EC0DCABFFBB5F292DF9BAF5EFD98209EA8A30917A0A8F05
C3189F944D119A0D655FFC21F4D0EE0657B6020BDF03C377DF421A9029D385F9
AC25FB579174DD93AE37AE01AEF81661F20E8991435BCEEC9322A1BEA9FBDCBD
08B1D8E577F27BF722A846820298132FBE7AD9DA28869D6C973E013C395B2D30
6A5866390F45CA39C1AB1FF5DEF5F745E578DE52B92BA8AFDE2EBA31A9EAE896
C172218F234C6837AC71FAB308420D9C5AD54A4E62B3766D2A40397728D27A52
D79CC2F7242E16EDE58E3A969CD9888130498DE5138DC0775AAF803E6D815382
B98570E676CBE2EB8B979E3096C64FC2DCEDA81332A6CA77C7022367AEFC19CE
2561B088F1C1CEC657C348AFBDC3C6932B8E04302724CC7083945790F5B3333B
0DA280FFB7BF6B6DE627380229EE175DD1FCCBF7AFD5F271807F78DA65B09DE9
6CD29816E8143B2E264FE613B7CFAAD0D0DDFDEE788E27CE035D02CB0D6DB0E3
7BB26B87BF315639A5D81120CBFAEC4EE00031470D242372464F599D37BDADB1
C3767FC244982AEC12979779B093B7466679206D016E584A0D7C589A8D1118FA
A37366BEC5A7AD1C2C1EC2A80C99CC56138EFB69924BD85EE39C7F037B872330
E5BADF9A39F4343A6672E9F829BEEA2436FEAE1A015F5D3DEC5F4AD4C76E13E7
AFBC99BA946A3DDF83684D43A4F36EC97197FB3AFA956C6C6FF9DB5FBAECE0E4
7FB991A88E41395CDB637E39F56A94D7635CC2AF3D39B5699AD48197E2130A9D
EE00D1EB353D374B2577D75F08F3EC366CB9D34C2B1FFEEDA4D5C96D30A7EF81
55F00F8A307171DBDCF2F32239CB69EE47614E1075E64E4F45132F51C917E1A3
0EC7B7C92536AA1D6186B0D7BBD26DE53C76881E64F2587902D6883EB29B1DE0
6C21EB64FF9A6125AD70466E3A5E858701B8C61712D93ED09E60530753F9C1F3
A0F8AA6710C47C26955A37FB324EC19422F36299DC43E66A98F1E963D45F6980
330831372A303C1EF8E3474E04BDE02268247D4C1D87922A35405776B6C89A57
F2DD8E46D8195A66E50003024ABAE31BF9265EE008334A8E9FFD28F291902B42
E17CC37429DDCAB585C05A2E4A760FB4C38FBE5BE2F1A46032D13BA0E1BF87F1
8D97C9D3BA7FE46848E8ABCD1C785D37D01BF0014606E77BF5AB5BC18CA596EB
A599FC8F9330DCC56AB561A84ACACA77D87F6E394762A84FC0A42662BCAFF779
B042B3C0CC6D33EB1DA440DA245B3E68323ED946F396112D7A2B395F1C9C7CF1
972BA6BF80B38F6D90A601BA5A238E0462C57ABEFE692E4CBA2181B6447C7E00
9F7E8FA39FCE1CDBBB9C976AF204526A81AE2B8B3631E86A3E4957240977C4FF
2CECD97CB0BC411B7DB9C5A0BCF38CC4E8AA47A0FC47589BA687D7E1CF6045C2
2E4803EA60AC8E9816D8D32CAF70073C4D5BD6D0A0B9A103D26589AC3DB579E0
02FAF2BA11730D2F50016F3B21F849C20CE9E3E99C60CE1B839A871F8DF8EF1A
204A31BF7D8CB8FAEBBEB94836FB517F2E5AA1C61DFA5AD2D26C4479117AB1F4
D98206319811146048F3DB6A96DD9678602EC4824BE0EEA744B277D6DA2689E3
83125EB0B924C02560E225E0EDF961BD0C7EA5CD053F7F2B0E74F946A3C04B71
99243E59601DCA2C1011107AF3CB414398FDB9E9D7C3A63B507BE3C0413D3853
37D03F04BBC641FD0A5D07F0E7D598A24424A5E869A4C56503E10BA8C0FE973F
D7909107EB4DE47910D62ECD82866999A6C261773FAB34E0A0A21CEAE21ECF69
0386B64DA47C18E56F76FD207438ACD141C2B0D5EB2E6E6077CC8A85B8933A0E
205BA6611DCEB9FEF7AD85DA19AAE28DC9FB6A75A41BC4FEBB72B71FF4751302
EDA4E11DAB33D898318B57E2504F3CABEC1F80A5CF306C59FB33C42A2920CDEE
A9AB7AC7B364CAF0A52B01339BA047DBE1E913C77B7F003DE74F98F55C53E8EB
6F5D7EC42219057B88CE71D8BEB08F1F9AE70790DED831671189C16AF91C67C9
23D71ABDDCCA2F078ED24382AB31C03CC82604DE1C77C8EFD6E505B9D278F52E
4CC754B857C9D60DAC3180530873993FBB9C995277B3592F3256D82856FC71F6
25E42FBBA71E52ED27B1CCCD2BAC0B5BA47A054AF696C8D07D65D039B7E5343D
1BE8E319A528C82ECF50FB0B462DDC6637D3511110B17E16E07C1FEBAF9D5189
C0C3172CF0AC32ACD2308121A8865635958B9052AC454B6A1AB5EC4716C87FD4
83106C1FE8D2F61C496F91CB46A768539277ED92BBB9EB4D3047C730F3B2B54E
563883A3DFAAA6E94698AB6A242DC2F8CC0F493A7D8C2049C35387AD60723C0B
79F4B8A0335B3D2778B565D1420015C4D9A3D442F50B092BDA2F86F75F676FC9
97159BF302C01CD6BF2BEA1DB916D22FB31410A14E0838FC0D6CF662DE2862FB
B64AAA65CC5F7F36095B51D9C0DBCB734B68BC77B1D8D6FD0557860F9311C6E3
A1965A0644F07CEB68EC1E0242A738E3D05A45C2D63201CCB7881F6267DEAE84
0A2FD6B61000F75ECFF73C5058F587947078EE6EFE553A37BA79A93C3C765069
3B4A31F8E6B0E3FEFC22054A395227B4618DF598EA5E1094DE4CFECFCB7FB957
42B9D87CA5E6BDDD31F6CE0AE95724612D484555BA4A93DCCA877345A2E6127E
7CA9CF24952ECB0F67CB9027D395CF938543F7DD41442F6F9964B447181C3701
B525DFB82C6B5032DE8F44BFA4E56FD7095EFE357651DE1FE7B04765C409A0C7
D4A4F208CEB977E76BB39251E8C8B026C264D076C068FD7678EE90F991925D60
0BCDFE19F6629C3A9EA9A627671D53679FAEB55CB68C504AB8B34791C54AC33C
179B9CD792A3E8968EF309B26E0CA5857F76C9DFF5F576951AB86D529F31D845
C3A66772E6379B7377B4718407871C76D996394A396743470987178635BBBE3D
54037472A2946DC54D6748B5E276434002D86A5D065083F630D83379AE02C6E0
25EE613D4ABD5249CFA7D951B74FB6D9813B9536E22B06D0CB4C4DD99A7FA146
C1A16CD50EEAEB9B935E860ABB37443684C0BF30007B1D18E62FF47B1EB3459B
743227DB8BEECDF197C706578DE89A5D4B29FCDD051E1BD30E78D7EE2D55D6F1
88B77DF2899F9AA8CE30223CA6EA078E67F77073F746C66351A15030D8BB6A6C
AA80CE019385552F93D91C972A754F3745D103F7806D3E0067
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /IHUVTQ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 108 110 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 0.003906 1152 1152 re
f
10 0.003906 1152 1152 re
f
256.855 127.172 792.934 935.063 re
f
7.4805 w
2 J
1 j
/DeviceGray {} CS
[0] SC
256.855 127.172 m
1049.79 127.172 l
S
426.77 127.172 m
426.77 117.82 l
S
653.324 127.172 m
653.324 117.82 l
S
879.879 127.172 m
879.879 117.82 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 29.2121 3.65313] Tm
0 0 Td
/F8_0 6.98155 Tf
(Baseline)
[4.656694
0
3.881742
0
3.490775
0
3.881742
0
1.549904
0
1.549904
0
3.881742
0
3.881742
0] Tj
-213.673 TJm
(MRS)
[5.815631
0
5.040679
0
4.656694
0] Tj
-165.822 TJm
(Washout)
[6.590583
0
3.881742
0
3.490775
0
3.881742
0
3.881742
0
3.881742
0
1.940871
0] Tj
Q
256.855 127.172 m
256.855 1062.23 l
S
256.855 127.172 m
247.508 127.172 l
S
256.855 438.863 m
247.508 438.863 l
S
256.855 750.543 m
247.508 750.543 l
S
256.855 1062.23 m
247.508 1062.23 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 18.866 10.0988] Tm
0 0 Td
/F8_0 6.98155 Tf
(0)
[3.881742
0] Tj
-7.48047 31.1687 Td
(200)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 62.3374 Td
(400)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 93.5061 Td
(600)
[3.881742
0
3.881742
0
3.881742
0] Tj
[0 1 -1 0 8.48047 16.8313] Tm
0 0 Td
/F8_0 7.97945 Tf
(Charge Transfer \(-pA*s\))
[5.761163
0
4.436574
0
4.436574
0
2.657157
0
4.436574
0
4.436574
0
2.218287
0
4.875444
0
2.657157
0
4.436574
0
4.436574
0
3.989725
0
2.218287
0
4.436574
0
2.657157
0
2.218287
0
2.657157
0
2.657157
0
4.436574
0
5.322293
0
3.104006
0
3.989725
0
2.657157
0] Tj
Q
4.98949 w
0 J
/DeviceGray {} CS
[0.7012] SC
426.77 237.75 m
653.324 144.031 l
879.879 138.453 l
S
426.77 284.457 m
653.324 136.305 l
879.879 179.543 l
S
426.77 362.664 m
653.324 192.672 l
S
426.77 912.258 m
653.324 211.73 l
S
9.97151 w
/DeviceGray {} CS
[0] SC
426.77 449.281 m
426.77 292.82 l
S
426.77 449.281 m
426.77 605.742 l
S
446.723 449.277 m
446.723 438.262 437.789 429.328 426.773 429.328 c
415.754 429.328 406.82 438.262 406.82 449.277 c
406.82 460.297 415.754 469.23 426.773 469.23 c
437.789 469.23 446.723 460.297 446.723 449.277 c
f
/DeviceRGB {} CS
[1 0 0] SC
653.324 171.188 m
653.324 152.793 l
S
653.324 171.188 m
653.324 189.574 l
S
/DeviceRGB {} cs
[1 0 0] sc
673.273 171.18 m
673.273 160.164 664.344 151.23 653.324 151.23 c
642.305 151.23 633.375 160.164 633.375 171.18 c
633.375 182.199 642.305 191.133 653.324 191.133 c
664.344 191.133 673.273 182.199 673.273 171.18 c
f
/DeviceGray {} CS
[0] SC
879.879 158.992 m
879.879 144.473 l
S
879.879 158.992 m
879.879 173.52 l
S
/DeviceGray {} cs
[0] sc
899.828 158.996 m
899.828 147.977 890.895 139.043 879.879 139.043 c
868.859 139.043 859.926 147.977 859.926 158.996 c
859.926 170.012 868.859 178.945 879.879 178.945 c
890.895 178.945 899.828 170.012 899.828 158.996 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font IHUVTQ+Helvetica
%%EOF
