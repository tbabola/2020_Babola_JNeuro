%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.7.0.1216025 \\(R2019b\\) Update 1. Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 108 110
%%HiResBoundingBox: 0 0 108 110
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font HMOQZA+Helvetica
%!FontType1-1.0: HMOQZA+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /HMOQZA+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 53 /five put
dup 65 /A put
dup 66 /B put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 87 /W put
dup 97 /a put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966D6518B5A8694B2654089FE00D86C0A7AE42411274EE55A1E0BAFD
F224E724525A32C38BF7C3DE517DC5968302BB227F4BC07B89EFDA21F5252B3F
8302263EC83E6E32BD97BB53EA65C5783D58852CA268E05C7A652176DA9123D0
4F6292CD268C7081566E51959CDA63F82F1096B3F29FA283EF67748AEAB4CC17
490457D7731B9847E4BD3157E5A4CD668003D4400708642DED49B89238FEDB8A
20E0AA9A0B6960A439EE79BFE79E433BE0EBD009BB63C63532C96C459AA3EC2C
EE431F4F5AE6DEAC24C39B7BC5CCFDBB1CA325FD4F90007A06FB7E33DB9A9CF6
CE1930E80852105C007D685F4552125065078F86868A0508D33B1FE9AFCF12BE
12A628AD5D13FBD6893B0B355E616E97E26CD75223995AB53077B32291ADC01C
685B1FE608A8A8140D111AFDA908843D78A805F1778E1601BE2AC25853E6881E
87B5200B5C528E4FA640C02C778EE5EB5C26BCDBC5863C727626CB527215EE99
091BC15779B016A10CB50A47BCDD525E72AE22BC6E9171A5FE6A5F4167C02A4D
B2CF3DAFEA00FCB90F5558684772F706F02BF1F92C716A4E45BE34AF677D62D8
09A478EA2B87BD7DDA44B40C8688A92C8627F089298479CE3BF3202B590F8DAF
8D8D8E12AC713BE9CC6A70496F21E656E12DF3B11CF0E0BD5983E9DFC066AA3E
11E2EC008564709C7C9311EABB2455BCFFAF1E20E85A4AAF0671C2431A2F75E5
601828742307D4D354A2F32F5C04D4EB4DFBCF456CAA74E9BC0AE0BD678F9D04
4A24ECBA93FD7AE7008F1583E2233C75D42C897AECF89AED60995DC485E05F8E
7CADA915053E3B84C441569293C545A20CA454BF2577FE11942D285E4B5E68F6
B9117CBF1EF5849F31A0FCDC792E4F2023ABDCBA417269C295CFB930FADC4DD3
5CAAA3B2A0EDE2A38065CA076CED6B9DD686550FDB5CE25797AC14C297742389
97E5A8C284AE6DED2BB1FDAB9DFFE369723311D418D0211E669F8350F1A1BB36
91C53CBFDA68D855DDA34F86CC8C2F58899E33602CC69555268A70BDD0A3AFC9
FFABACC16CCE9AB1A8A6480512C0B3A58D97A7D5DD8F111F5257385733BE3917
D1D10DAF8B0C94E9F4BF4E4D5263FFA8804DE5F5697ED1B414C0ADCF1D08415B
74D81821E9EB90E2C1FA9D253371DFF81704DDA9CB6DD243AAA23E25630B0418
1DB5EE2177CD207BFACA178307C7D7ABE489E1F5CF157F51DD6D7503B2F42B81
146F39992F2FA9ED862FB50C7AC2DA5E169E83496015F604FB0087E269F9A17E
AF2D2A669B678114525D104AC5E665471E251B05AFF37D4031E04E36838579DD
33D789DA95637A47C69FFB55E5B0B682C188B32232BAB14EAAE4693550548D37
A0BB265120796E8AFA407E73B07674DAB094CD8C9535A43261C37F6ED12DEDD5
30FF12352DFBDFD4BFE8B01C2203404A5BFEDF0C3F035937ED059831C48603F8
E1A85D3EE0D052FC0E6DC88B0357BEA3D5F52C2840FF8F4491E6746EBADB78BD
392AD3868CB533B85BDDF5D0152C3D9D9117FF5500159DB47FB18445B1B6AF91
34EE57D843D6D36E6F214519BBD5E6D55D14C742B8E08F93E9100031A9DE8CE6
0BDDFD2F222288136AB118F595E08A5BD4923B6BCB0671561C60BB9663B3FDC1
7D9FECF73710730C9F83D5531A8A39C4D38D017A10CCBAAFBA5D40A0D122F5D5
3E1064C1176448A1CB57632E3354170DEB0C7DD1EC047371DE0459B63D3F06AA
B5612E042CF210631A97054B06FF7EACBB2DF23157E3124D5441CC1AF1B39B5D
9146BCB41A13EA6BF0247690886F3B2205FD4FF78D3A8E3DFC0FC02AA347077D
9BAFB7759F7EEEFC26E99F4B1C0803A350718B35F3DCB67E9E5F0F8D89297893
54529B44FB56B6DE8BCAB2DBE5610AC3CBDAEDBB8B6CDFAC83E343A247E4D287
046E436F726452D7F74201521B4F2D4841033B5B5DAD45FCA842B7F98195380B
A8829AC38AF7BE114368683BDF639B80430E16C3F0B00A1DE3356F6E093D9219
2294608ECA5FA67CB297D6EF3B02D8E46D9A5D06354D3378FBBA8927CBDB0F94
2E2E61A6350B24C577457EC75CA28E2D0B3AF368DC05FB7C31B2D2D3B4E5C49E
703E4061A654AA416DE179AA2AF5663F4CC3D18B76B9AD4126E9BDFE8F915C7B
0697846BD21B8E51BF5EFD26886485922BF875204914EE50EB03EB423906377B
0EF671BAAE310A556ACB7096B8E2AEEDAD6D6C4759B809146A7B6CAD3AE27182
AE75D7648430454A311165446EE8BDE6881CD486809C7AF928AB715AC273A7DB
C4E31186AFE28F6C429F53476CDE309F1A5D917999D10F62BA0C3AACCAEE5D5D
A04C3EDBD71B355AC1968CA83DF40121FD05C8FC3FAA2FBB1980716A359DB61F
FD05E3523102CDFC46E9F8C101CE741019CAD9777EFAABBC90BA4E412F8BE107
A9C52E17FEB9D0D4044A7F886B871BA1B4E4F1C7C87F2F47289D2963DA422BEB
5B3117D90E3A051722D112270A92EEB3FA03DF80A6C8873854033CC04B783380
B61FEC176C7B9DEE90ECB4452F20C61309097252E6C4F6D9D03BB4FE708AC25D
D905D6AFFDC5A7E787BD0358FAA7C3AD5EDB4C8EC4552D09007A7684CB952B71
F0903BE643111E13E6EDB3280B894D286E3BB34CC5BFA239ED38DF507B6DAC74
12F9350DB3B0D3E4AA0A9BF649BCA96F74B32C999F4ADDC5A274F54DA6C7AD40
C7B34A5AEC4B1C590D079E8E875DD2599012DDA57D3576A0896FC7A26B412CCD
A1B5FA6E40CD0D3DC9922CF9996BBB7DA3233D440F4E6F2D17404A7932C64DD7
877BE177CBDD6C0873A3C5F8FB465E5D51290EDE5229D8546ABEBD3D315B9204
525B7B5896A7841FD3E0A9CC18DD3EEE8F2F4D515FB9246B191ED8A400F0D144
6F47ED455A0479EC4BA6AF02D67BF88815C035797E669B63F8063AA0EF50A664
5EC399522700F8CF33B53F5A05EA71BE1ADCA9F2057E1491D57CE728E2462D52
6B7BF55C7A12B1FA8CE4A7885F9391A759A91F5A1154DE3D67F72BDAFAD9C739
461245A064EBCBC46553FCA534A8C445E9EED7047A3CF67FC58FDA9535675549
932637104D3F1FC0F944A10823C757D4BB497EB0CF16FDEAD40CD5F92B22A872
333FE958BB52425DEF49575D0D380EDCFC50D0A416E7B56295492821718D2F77
78250B0A3AB677E271E4EC9ACEC3A945A09CB23383C6B55DDF182D15D6947702
37B069AAA58EB6459A33ED9B4326B412AD7235CC5DD1F4E7405A3430C1B0A0E7
ADF5C9ED4CDF7E06D8812CBD6506B04716E57738C79A977BE78FE550BF37692F
17E755036194A8ECD2EEC6A01E81AE5702390E2099ED4066F0AD8859517136C2
C3B7E8ABBCF81FBF6F15BC132FD47C8B32717A3FDE7ABAAF923AF7ADECF5B20F
2DB6EDEDD75EC4760C2B7D0A76D47829664233B3163105A7A35AF54642CF42FD
653E614DB20BE20965E80DBD239A8F195B9C06B8F3EC44AC4092FFF485B7D911
62F7F5D4B886013FBCAEC62D29FF1AA93059332423A415188678FCE3CBA7F528
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /HMOQZA+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 108 110 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 0.003906 1152 1152 re
f
10 0.003906 1152 1152 re
f
294.258 127.172 755.531 935.063 re
f
7.4805 w
2 J
1 j
/DeviceGray {} CS
[0] SC
294.258 127.172 m
1049.79 127.172 l
S
456.16 127.172 m
456.16 117.82 l
S
672.023 127.172 m
672.023 117.82 l
S
887.891 127.172 m
887.891 117.82 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 32.1512 3.65313] Tm
0 0 Td
/F8_0 6.98155 Tf
(Baseline)
[4.656694
0
3.881742
0
3.490775
0
3.881742
0
1.549904
0
1.549904
0
3.881742
0
3.881742
0] Tj
-60.5346 TJm
(MRS)
[5.815631
0
5.040679
0
4.656694
0] Tj
-12.7962 TJm
(Washout)
[6.590583
0
3.881742
0
3.490775
0
3.881742
0
3.881742
0
3.881742
0
1.940871
0] Tj
Q
294.258 127.172 m
294.258 1062.23 l
S
294.258 127.172 m
284.91 127.172 l
S
294.258 438.863 m
284.91 438.863 l
S
294.258 750.543 m
284.91 750.543 l
S
294.258 1062.23 m
284.91 1062.23 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 22.6063 10.0988] Tm
0 0 Td
/F8_0 6.98155 Tf
(0)
[3.881742
0] Tj
-7.48047 31.1687 Td
(500)
[3.881742
0
3.881742
0
3.881742
0] Tj
-11.2207 62.3374 Td
(1000)
[3.881742
0
3.881742
0
3.881742
0
3.881742
0] Tj
-11.2207 93.5061 Td
(1500)
[3.881742
0
3.881742
0
3.881742
0
3.881742
0] Tj
[0 1 -1 0 8.48047 31.4184] Tm
0 0 Td
/F8_0 7.97945 Tf
(Mean Amp \(pA\))
[6.646882
0
4.436574
0
4.436574
0
4.436574
0
2.218287
0
5.322293
0
6.646882
0
4.436574
0
2.218287
0
2.657157
0
4.436574
0
5.322293
0
2.657157
0] Tj
Q
4.98949 w
0 J
/DeviceGray {} CS
[0.7012] SC
456.16 320.078 m
672.023 151.945 l
887.891 284.852 l
S
456.16 630.699 m
672.023 170.699 l
S
456.16 471.969 m
672.023 175.637 l
887.891 196.539 l
S
456.16 253.242 m
672.023 165.262 l
887.891 218.375 l
S
456.16 259.391 m
672.023 155.082 l
887.891 224.387 l
S
456.16 482.168 m
672.023 217.281 l
S
456.16 365.844 m
672.023 155.105 l
S
456.16 366.523 m
672.023 147.781 l
887.891 189.074 l
S
456.16 1030.07 m
672.023 236.961 l
887.891 623.906 l
S
456.16 400.965 m
672.023 163.992 l
887.891 319.578 l
S
456.16 397.941 m
672.023 155.375 l
887.891 248.152 l
S
9.97151 w
/DeviceGray {} CS
[0] SC
456.16 452.625 m
456.16 386.453 l
S
456.16 452.625 m
456.16 518.797 l
S
476.109 452.625 m
476.109 441.605 467.18 432.676 456.16 432.676 c
445.141 432.676 436.211 441.605 436.211 452.625 c
436.211 463.645 445.141 472.574 456.16 472.574 c
467.18 472.574 476.109 463.645 476.109 452.625 c
f
/DeviceRGB {} CS
[1 0 0] SC
672.023 172.285 m
672.023 163.633 l
S
672.023 172.285 m
672.023 180.934 l
S
/DeviceRGB {} cs
[1 0 0] sc
691.977 172.281 m
691.977 161.262 683.043 152.332 672.027 152.332 c
661.008 152.332 652.074 161.262 652.074 172.281 c
652.074 183.301 661.008 192.23 672.027 192.23 c
683.043 192.23 691.977 183.301 691.977 172.281 c
f
/DeviceGray {} CS
[0] SC
887.891 288.105 m
887.891 245.094 l
S
887.891 288.105 m
887.891 331.121 l
S
/DeviceGray {} cs
[0] sc
907.844 288.105 m
907.844 277.086 898.91 268.156 887.891 268.156 c
876.875 268.156 867.941 277.086 867.941 288.105 c
867.941 299.125 876.875 308.055 887.891 308.055 c
898.91 308.055 907.844 299.125 907.844 288.105 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font HMOQZA+Helvetica
%%EOF
