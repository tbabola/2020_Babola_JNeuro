%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.7.0.1216025 \\(R2019b\\) Update 1. Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 108 110
%%HiResBoundingBox: 0 0 108 110
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font FEEGBT+Helvetica
%!FontType1-1.0: FEEGBT+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /FEEGBT+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 65 /A put
dup 66 /B put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 87 /W put
dup 97 /a put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966FC1848061C8C2792EA837CA2980815FE1B4759D42110B21023348
675B4A4C5BACC0A5FCF9882D40B72C58931AF517DF541CAE397EEB49302082D4
84EA76FE6865FD0D5D635C2B1D6115C9C3A491DB57199900FDBCCCF0994EAB43
BAD4BFB4DAC85771D629060A7DA4A7AD6A52BA4335A368FF9168D634363A2F57
17F588FB0EA874DB37A38E56FD02B6DA3D725AB34BCE6AB6534A01AF5AAE66BF
D1714EF7AE5895D84B0FB667E9341429FF03071951DC5BEAEA1386F71A099B13
7C404F67D8FBFC4723738E522383C3540E539356DE00735ACF712A9653F6D271
A6486C1A3FAF94B3FC60AEA2BB1AF1FF90BE2C12F970BE7C5BD9F08CEF621228
4595EF4AB75080E7291F6DCD9298B129C6BC17140B3ECA60F1C6D167A444DD80
4CB5DAF412B51356A20D70843B01C331B314AEFB8C863D73A10F1F6E60ED3E0B
9F758949B4C237AFEA16C3F6D088561D13E23B1D2B01920345EB0062C10B7FBA
B07B0DE7D1CC8B874D03D7AB599D4C24E84D427CB68A5BCBE5A2BD6E1F2EC9CE
11E410123DE92A5296D9C6452B705977D24EBE9D5803B828A620CA1F39655644
A8858AE86DEE17ADE1E84564D0C50FDA5DF4A1AB281D8F93A508CD48B211A24B
CFB576481AF95F89FE45D5D64A4FF8B1B1D38335A09D8220120DB431925485E9
262F80DA0A2105E13B79F23CCE80FA893340E85EF6E6D17257A708125C8857F6
DE4E5BD593A6D884CB9EDFCB6558D5D68C892434EF1FF4FEBD71D3B73C52D49D
CDA746C58CB53E9F8DCFCB4F734EC89E4F5DF47451F4F522154FA5C3EB77296F
1F28A7CC74F3D555C21AC006AF117AB6BDAF19C231091E80B232A070CBCA49EB
C5DD4244B172CA5AC8C1643E6C7F6F3A5A609B879FC485F08D7C5887EAD6DD7B
7AB0C5D41A1AB2901375377C0E4A65EA8FD708B24C509F59AB035327144B5C67
FAC582FB03654DE2BE3673F4CBDEDCC173992A041CC0810FFA7AD5EAF0A46CE6
FCF17D045C5DB3BE5C08418FF64C5E3BF300318F50128DE8EE337D16ABF18F01
C38096678C4D936ED1740C6527D0B533D1762398DF7143130C2A44CDE88AA520
0EB0016E5245ACD530B69D6CF48E54402B35803113115ABA7F6837A239178F04
44129DDBA406349C2F105A121D6D0A4831035DF4A0271C6D70DB35EE56C4E202
DB33EC0D591AFD1A7916821A733274AD1A62E236D97B7ED560F1687F0B9D9D25
8B77C236302E7A14F6D69D69E2AB2C934C4AA39A33D58EE146F390BDF6626CD5
59BAF6CBDF20894D04EDFBCC3891FD7AE62FED6AD9E82E09406DE8C14A43A969
6154FA0B2B9FB99A8739C62CE3E08EF3BDE41E5696223C94D0B69D14A9161786
462ECB9E54AC1520367EDDB38732568741BEB9759A3389594BEBAE61DC8E3028
77448D99FBED7411FB78BBF26AFF4C30F017DDE74B7CF69FFDD4406DF7476819
CE649CAEEBA0FD03B24656B36F7DB013C04543C2B8A45AFAF62CF99C03E655D2
D950091E8A8C1A0DC1834ABCEC23AF0BEEF65755D16C3BCDF22EF6712F5713C6
6E36C931E4341DA108A64592F75F5EC239DD3A9D9DCDFE5F42E05466795505AE
5D6C9B9C4B49ABE5E9323DB3397683D6CDE22169973565AFBEAAAF5986709EA8
528C5683C4BB2B87D5EC7CA386940F4626E8EF67BF5FD10E58320AFF2721B20B
F9C82B400C2F3250BC86503B51CEDD06CEEEE45DA5B0383E9076C07947DC38B2
39FFF92CD4CBDBB0B4DFC215D0B6A6FA68B9F103D22462F7425DB61D8B0811BC
FEEDE6365F6AAC8E249063D7805BF5403600A4D5A6BAE9003E96F33700CBCBA3
A7DDA016569B6AD271E37A78CBCFC83E3E820C7550BA2576C263AE8F7E5CF8B8
5CD3AFC4BC46907984007889C6B75780E931B5B3D1F1B77E4EE60F367C5EE365
507EA56B82D75BE74438F788EA03376C5CDD23C5F1E802AE3095E354D46A1EAC
A204C12D2F74A7CEDB2527E2BD88EFAD4E0921E0D16521BE629B450F519D377A
EC4D77489B5FB23342F0FA5638A4284FF5CF723D35E07E24639C4322C352341D
EA421F46C75E6EC3B0F0A105EFD0FA94F4664A94672C98D3C2E0F7F8538D9096
E43A0182137BD76A070B03F7D5BE9883999A9596CF39B5885D55822D42EAD482
56FCF7B1C15FAF8087C0230264C66186CC0945BA3688449E1529E2BBC99D903F
1B9E466916EFA27BC22215B5450FE4121994ADB47FD15AE92F4C32B3AE2FE18C
5775A37550593DEDC65DD1E0A7EF77BD470DA3D3BAC4D9B03B8362E88B40DA00
52BA550D32DA09FBED26C78C666B2CA9E8B5CEB7C4359A77FFF008BDC499F6FB
77C7174344DC3BFACBF049EFFC3BCF51325B44565E57D9236B71DA1291AA3EE6
EB63956FE886BDE38AB6DC269E641752DF3554E283955162C3A9FD79C7490E2B
44F4B791533B1E200B85F48128B9EB66399F8968BFDEA369BB2DFE4509CD7407
6EA3D8D9CD56C9021E71109E70987F90FE0B379DC68960BD17F0A88F5E374024
D30F5611BBADCF67FA847E2D97DA49053D388D9970240A3376064EB506F40447
70145D46378575D4B70841C3666D46CB142A7C06742BFE97C6116200AB35C76C
660CAC525ED2B6FE18BEB00F7D611C6AC28BB53A93F7DD21F1B6F8858FFFE41C
91DE34F6528D8CB9E265B6FC038FA2860DCD118D27E1F2FAC8275984B1EE6FF0
27E5DF55FFF0BAF8119A99B9C460C7A212D5C5D3D497A69692BB8A61EBB27BF2
8AC7583BE403904201FEB0B6E63AC39D1573E8E56FF5F7835DF83A28ED87FE6F
FFFC412033602DD8D9AFA512EF209CE94D5AEDFB0C771CB3C8AB00BDC6CD57B1
2FD64C1522944EBE6CD7CEB6640210083B76421E75F1F085C67F73B13134794D
289866752E5DDBFBB90D73FA5D77D5FA97557DD0E2A9C1CB57B8E1D755E419E7
8828A0C2B2109F242731C12DB2EE40034FF2B3A20110A4CA6B31ED425FAD2A2A
A3C4C27FCF30A7F038C5D78446A0C6066CA2753D6981E9063542303FE3749F4F
9CEAC3B422B5B57F7E2D021FDEEAA6418499B4A67ED0AA13DD7EE81CD7E4C86B
45B3E84703142E355F32AA2FE82BE418B86F2ADD63CA9B98D53A66B2158AB2AF
A13A8E4F5126AF6431BE95BD20235642FCEB80F59D3F76382D8A22912BEEB563
2F94E011F0BC414BE57FF1E2CD945161551CA87D6B7B51EA136E217983D6E408
9525CE84B7F0779F62207BDBA8467AE799B0A00686F53C8D65717BF11E0C0750
CB667CD962CF7B5BF30EA44885B8C71054411BF0FD74D570776253017016F8DD
3D253928C40E5B85568186E6831801613456BB5CC591C59E13D3F7DFCB36E2C2
5B59C3E9926F89B4E3B59DEAA13D6EF73CBCFDC97301036C8A2C5F0CB96A98F6
7908C24868C8CE5D3FA44C4F733B589D73681623227B1743F8D9005E28F3D6C4
FE6DC36551F428CF343DC452284C60532CA5A07BC799C230F2F77932F86D7193
582AF004B4980D07369D2FF86D2611BDA4333BE26B2B8EB93C47A463C4A91D53
BA8F3FF262EAD154CD16E2B46F09CC32C71A0591176E51E0589D7A35073DA66D
A28946C318C0A3BD12FF938119AF88C38E13C4232EA2B93F2956F726723E9D77
FCB2073A01A15045762D16AD99FFE29BED0FDEC523A9E979FE76539653F50C70
E496A9D591C97BB9225E1E51CAB47666DF1E02F68C3C3009E8F4AB9A2A508255
C2865AE41D2DF746C06C5906952E41352374164D83A19E2B7A070535A85EF554
827A74375DAA5D44486D3C796C713A6754B9D60E6DEDBD922A9B2AD0F354E9BC
6861F767837B81CED79E7D390BD962BAE1BBE04D0D5901657DD9CB2F743DB371
3EF250F5E612676D399949F232C222698708CAAF767D5D84DAB320242D956C61
6C1058D3481D5692884D8E9F27098D124FAF8DCF4AA46BA9F33D0B98DBBEE36C
B9599510C81DE7B4E80318F960A246226BAFFB8E1BE160482A5BE00B7BFE021A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /FEEGBT+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 108 110 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 0.003906 1152 1152 re
f
10 0.003906 1152 1152 re
f
256.855 127.172 792.934 935.063 re
f
7.4805 w
2 J
1 j
/DeviceGray {} CS
[0] SC
256.855 127.172 m
1049.79 127.172 l
S
426.77 127.172 m
426.77 117.82 l
S
653.324 127.172 m
653.324 117.82 l
S
879.879 127.172 m
879.879 117.82 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 29.2121 3.65313] Tm
0 0 Td
/F8_0 6.98155 Tf
(Baseline)
[4.656694
0
3.881742
0
3.490775
0
3.881742
0
1.549904
0
1.549904
0
3.881742
0
3.881742
0] Tj
-213.673 TJm
(MRS)
[5.815631
0
5.040679
0
4.656694
0] Tj
-165.822 TJm
(Washout)
[6.590583
0
3.881742
0
3.490775
0
3.881742
0
3.881742
0
3.881742
0
1.940871
0] Tj
Q
256.855 127.172 m
256.855 1062.23 l
S
256.855 127.172 m
247.508 127.172 l
S
256.855 360.938 m
247.508 360.938 l
S
256.855 594.703 m
247.508 594.703 l
S
256.855 828.469 m
247.508 828.469 l
S
256.855 1062.23 m
247.508 1062.23 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 18.866 10.0988] Tm
0 0 Td
/F8_0 6.98155 Tf
(0)
[3.881742
0] Tj
-7.48047 23.3766 Td
(200)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 46.7532 Td
(400)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 70.1298 Td
(600)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 93.5064 Td
(800)
[3.881742
0
3.881742
0
3.881742
0] Tj
[0 1 -1 0 8.48047 31.4184] Tm
0 0 Td
/F8_0 7.97945 Tf
(Mean Amp \(pA\))
[6.646882
0
4.436574
0
4.436574
0
4.436574
0
2.218287
0
5.322293
0
6.646882
0
4.436574
0
2.218287
0
2.657157
0
4.436574
0
5.322293
0
2.657157
0] Tj
Q
4.98949 w
0 J
/DeviceGray {} CS
[0.7012] SC
426.77 287.391 m
653.324 175.34 l
879.879 178.07 l
S
426.77 336.762 m
653.324 155.008 l
879.879 230.156 l
S
426.77 402.617 m
653.324 231.539 l
S
426.77 871.832 m
653.324 287.98 l
S
9.97151 w
/DeviceGray {} CS
[0] SC
426.77 474.648 m
426.77 340.172 l
S
426.77 474.648 m
426.77 609.133 l
S
446.723 474.648 m
446.723 463.629 437.789 454.699 426.773 454.699 c
415.754 454.699 406.82 463.629 406.82 474.648 c
406.82 485.668 415.754 494.598 426.773 494.598 c
437.789 494.598 446.723 485.668 446.723 474.648 c
f
/DeviceRGB {} CS
[1 0 0] SC
653.324 212.465 m
653.324 182.543 l
S
653.324 212.465 m
653.324 242.395 l
S
/DeviceRGB {} cs
[1 0 0] sc
673.273 212.465 m
673.273 201.445 664.344 192.512 653.324 192.512 c
642.305 192.512 633.375 201.445 633.375 212.465 c
633.375 223.484 642.305 232.414 653.324 232.414 c
664.344 232.414 673.273 223.484 673.273 212.465 c
f
/DeviceGray {} CS
[0] SC
879.879 204.109 m
879.879 185.699 l
S
879.879 204.109 m
879.879 222.527 l
S
/DeviceGray {} cs
[0] sc
899.828 204.109 m
899.828 193.09 890.895 184.16 879.879 184.16 c
868.859 184.16 859.926 193.09 859.926 204.109 c
859.926 215.129 868.859 224.059 879.879 224.059 c
890.895 224.059 899.828 215.129 899.828 204.109 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font FEEGBT+Helvetica
%%EOF
