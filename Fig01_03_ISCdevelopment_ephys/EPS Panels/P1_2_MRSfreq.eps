%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.7.0.1216025 \\(R2019b\\) Update 1. Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 108 110
%%HiResBoundingBox: 0 0 108 110
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font MLRVOV+Helvetica
%!FontType1-1.0: MLRVOV+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /MLRVOV+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 66 /B put
dup 69 /E put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 87 /W put
dup 97 /a put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966FC1848061C8C2792EA837CA2980815FE1B4759D42110B21023348
675B4A4C5BACC0A5FCF9882D40B72C58931ADA515092744BC84E4A0FA298B51C
28BDAC3577CA1159BC2EE6FEB2F7BAECDC5755E315C72798A3AAF95CB7810D8A
BAD78866D715F5EBE8C8BCBB25B37D6E898E6EE2FCC5EA72E8A3D9EA5958C8C6
313AD2EB3BDDBAE8AF5597ECDAA6B8E9F469DD8114344CF8DF185278EE8FAB28
E7D9D5B0B2A0C8A12CF4B3B222F35655BE778410885644E46CBC248CF15ACE81
1168935F03AF578D1055761EC4CD5AF4B20DA885D01FB3647463A49FCAD1C779
85C4D06529615C5338CF86CF8A2FE65602325B8F5768D88F91FF30DAE0DB0633
CB9B26766A975CF38F132972A1FF9F2A044E929FB2CEA50918287EF3D73D9D68
DCB2F5362EAE63285C2F7D0A134FF168AD9A99F8655DA95A336664383C56858C
2D9F3AD991CC4472AE5F3F7F22EDE3209C61BC8999A9E9213567B9AE7AC76C42
38299683BA62EC4ACBC76F47DB53B616307F1CAB046F6C51A5C379EE784BCA08
C7825487E4A84508FC54D9AB76CF633EF08F9FCA7B2418AFDA94622AD0E1F902
AF2A20368E355F593CBD11CA08D0E54C78EAF2827B9DBACC5C681329843E2B8D
0A275FB3BFBFF44B4105B730ED69FBF6E6E90ED231EC4152125FC2F6199570D0
7C03F3B94E879A7C5A989A7351652678BB2F041DD7551364E1D67862D1790108
896AE5C2A4481281B50BE396294BFD79B3907223BBDBCD772C29122115D36EF9
5C7BC9C6B4B0ED03AEF125030C51300FAEC530039AF666D0DEEB95E71F81C387
57C6F6A1B12B3824516A19443CF51A894E9762A567FFDD474CC29594A00C3CF9
CDFFBBAF335DE92D441C90D9C60F956188121B55550E89FF2BD61CAF54BBEBF1
2721C202C5040DF29A53F2456ACAFDB5CA6D15DA56F6E6CB3D2C353FAEA6AB49
57077F3CA140412EC54A4B0DB15A503EC5B7CC3C277FCC6D809F2B7721AC3DD3
5BBDE639034ADD5FBCF5F32A4D2EB942F27DE5F8EB6DD9B5744A98CF298835C1
3BB192A7FF8F365E49A7D76265127AB3E5553CDF1C61F21781A57A102329339F
C368B6201A493B80AB328A9EDB23B0C55EB6D1AE98A2724ECD02F704021379BC
19189147342EF9F4A82295FCF564EC6A7BA9E60E85ABB9E02CBF90F7668F6968
52E057D23B8147611B61ACD5E64C2934F9002AE7C33758079700655DD5196F60
EE617A8DC5A84E1E13D4EA8B0EFBACC7A17D9D0AB6113D3CABD0FC69C8FF3D0D
03A849BCEA2E91204095325530535841D5DE4B33BAA135358A53BAF4B4D080F0
73CF3932369A57ABA131A6B49158948C81A541B9305622D39C2F17888D4AC258
651C65F60E7741464A1DA20050227DAEE07CDF9C59E8EBB7A19087B197871CF2
EA7ED6BCED0FDD9273176E5FF9E26EB811A8C9FA6320FABC9C3BC98AB5536A6C
ACD396D6AC1E4473B775451AB5B94CCC8BBC76D2E647CAE5E4D7BEA3E3DDC3A1
A1DCDAB4DB16471D6B94CDB7601FBD8455AAB5DD9488BF51F6EF311521742F80
2373B72232805BB089B3545C38DE94B73CD160BBD585FC2136879FBCF9D5E8FA
41FDE8E784B0475224B5B0EF2B92CBA7745B2E99D02FD12383238B9074551028
0E7DD69685030D41FF3187F4E17CB6FA1273E09E15A0D492B31BA7E4EB4F27B6
5BCD2378B95F9B56887DA601BADCE35ACDCE91719705EED9BECD4856E1CB5BA7
61EA28D1F2E9DF6161A4694C0EB147BD43C7C0B83AB35D4CC42C1B0B7551F389
06F553DDF0B4864A7DFC0784C664989C72C43138F29EFDF20DB33F856DACD6F3
EEC8C97458C423036B22DB3727A24FEEA7CA6DBCE39EE2AA8FAB96B10464B5E6
A048E5F3D7C0250D2C9B8B6C7CA69BDC9E702ED0F8543D3359288DD5D20472CF
849304C81FB92DF534CCD4452305D9FD29ECD176CE1CDDB60F0C4FAD4465E823
F822E4DA36E29B7CF114553F20741C2B3FEC7E55274A5AC155EE26F0FF8E1C0C
8C088C1AB4324935BDD701608FDEEFEE601D1C4F9932ADCDCA9EB2475524A690
CEB3C34486B9EEC03EA1E51001FF18635C6DB804BF82906DD46406278B5A247B
5BB9B1BD5FFDD1C2ACA307E8790AA19EDAF10206DC068CA94490667779FA1BDE
867D19EDE74B25F0F4422BF70670DFB001463967270E7F47DC7003CD90B7D700
A0AECC421DEB5E9DF15FAA1BBEED50C71EA96671A89330C216288FAAC03A0375
0B4F45ED6D1BB4EF4CD39578E7C07E45351EC27AA2CCBD1B5712F842F19F0BD3
00E23270FFFD91B85D4D8CB74AEFBC6C25B79F38C285C9725BF1157A4FB728C2
DA795FC4D28263F29194EC679AA266ADE86D1C6114B89817A9B864E6243E2A8D
1DA216D2445E046FFF8AF8516CF4AC7E99BB5F659AB417A2EFF7EBC9A6286F0A
A69FD8B217790F34177A628181A9D802A77CDCA23DFACF8D3E378B7D5FE2476B
E9401C41168B08D73146123CDFD2907FFB1C569BC62A54C662CEAE1E09445C84
1BE582ADE37E2507ED9E8892B2F275AA75D905D2BB6A3D7C53DBE5ABF40B36A6
3C26ABDAABF4208CFB992451E1CD5A816C2A16A0A1556816B19FE20798E01AEE
7A925E613248C3D0B7F88C2B1702FD5F4D2AED42182AFBBB96DA1F678BBFCF9B
297972C34A3FE28286E6309CFB2E61DCB5648085DE241E61A4A597551C2B5CC3
F2E3805D85B0267E520E59ACACF113897303341E228EB5E6C2497C06E757D2FC
BF55708949A258E06D44A98D97F7088070B369039627C6A79DA787DC8562A71B
ED3D21E111B4A0869454949869BD25FBF706A09A927C9DBE04B3BBF1B50B5A33
1F9DA525EB41198C51E753E600911809BC4533E30A10D88D9407F1388B8E2AAB
22025DFE86B4961A8035CD32EF158756D8D8DD2937F78DC84E84F7A5BCED8615
20EB1A5E5AC0475B8A6205B875CD646252DCA6E02F231ED52339B4803BE23CE7
1E49B18C625E2923819FC0AAED716E1E0198D90FDAA7A498BEB32B3831BC8771
A48C7614213731040CA3F644FF8DEAAE21E41E44B3A4C263B8604F0FA8E5907E
1A99A3431C52C803DBC1733B3916ADB7846FE34CE4B524B67E4D113DEB0F3572
9A57F6FA6B8600CB56221E65E547F58A2A4DFBD3C041271D99A0E882605E51B6
6DC6DF4BC3B781256354208838727F0B1D816E9DCE630C10AFA1E0A4569F273B
3D225CBAD7A9A659CF32E063ED420F131716A22A6CC0D8D1487E50D611D8DE6C
520DD497848591D0376B9544B0960B6EC0333877277D74820FFE84EE4100FBC7
1F3693FE3DA3BFEB7EE3D0F106C8AA40AB7F93913B2F986B86AFF952E1E729FE
5DD574BEA3AE10CC8ECBF8A367AC1A55CF21ED312A98572F3DCE3D818E14C1E1
C2692BCFD5578978571ABAA99F8CE5FD8FEA3974FDD2A091203C67E275B45297
C14433B535D3B25C30FBDE1D091DC346D9CF482B52BB7CD635819554E3EE75B4
4188893CE227732BBB0871AEEB2391BB35F4E78EA53B8B10B0F695DD49BFCBD1
705248826A03C1AD968FE4372F2E81327F5EE353A43AEF516B5A95E3498ECCE0
85227DED4E4DD2A23FCF9BAB767E6AE813D940608AD1C79A2308886D525E9B0F
102FD27524DF905E3776DA6B2FB6C0FC6F27947A14EAC8363AA09F1D2C05A09D
C2A879A145EC5049B5D15F457014602F3D493F8423A400049BB9BCF0F023054F
72F2FAC2D4E7D06184E73C21F2D5C3C5C2FAC2A5ED9D8F0B4DD494AB21CF2AE7
E335753970E41EF061B760B18F62EF7CED3A7F2079597ACB71EFDE4293AA9573
74D95623A226C4C5A731
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /MLRVOV+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 108 110 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
10 0.003906 1152 1152 re
f
10 0.003906 1152 1152 re
f
219.453 127.172 830.336 935.063 re
f
7.4805 w
2 J
1 j
/DeviceGray {} CS
[0] SC
219.453 127.172 m
1049.79 127.172 l
S
397.387 127.172 m
397.387 117.82 l
S
634.621 127.172 m
634.621 117.82 l
S
871.859 127.172 m
871.859 117.82 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 26.2734 3.65313] Tm
0 0 Td
/F8_0 6.98155 Tf
(Baseline)
[4.656694
0
3.881742
0
3.490775
0
3.881742
0
1.549904
0
1.549904
0
3.881742
0
3.881742
0] Tj
-366.699 TJm
(MRS)
[5.815631
0
5.040679
0
4.656694
0] Tj
-318.904 TJm
(Washout)
[6.590583
0
3.881742
0
3.490775
0
3.881742
0
3.881742
0
3.881742
0
1.940871
0] Tj
Q
219.453 127.172 m
219.453 1062.23 l
S
219.453 127.172 m
210.102 127.172 l
S
219.453 314.184 m
210.102 314.184 l
S
219.453 501.195 m
210.102 501.195 l
S
219.453 688.211 m
210.102 688.211 l
S
219.453 875.223 m
210.102 875.223 l
S
219.453 1062.23 m
210.102 1062.23 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 15.1258 10.0988] Tm
0 0 Td
/F8_0 6.98155 Tf
(0)
[3.881742
0] Tj
-3.74023 18.7012 Td
(10)
[3.881742
0
3.881742
0] Tj
-3.74023 37.4024 Td
(20)
[3.881742
0
3.881742
0] Tj
-3.74023 56.104 Td
(30)
[3.881742
0
3.881742
0] Tj
-3.74023 74.8052 Td
(40)
[3.881742
0
3.881742
0] Tj
-3.74023 93.5064 Td
(50)
[3.881742
0
3.881742
0] Tj
[0 1 -1 0 8.48047 26.5559] Tm
0 0 Td
/F8_0 7.97945 Tf
(Events Per Minute)
[5.322293
0
3.989725
0
4.436574
0
4.436574
0
2.218287
0
3.989725
0
2.218287
0
5.322293
0
4.436574
0
2.657157
0
2.218287
0
6.646882
0
1.771438
0
4.436574
0
4.436574
0
2.218287
0
4.436574
0] Tj
Q
4.98949 w
0 J
/DeviceGray {} CS
[0.7012] SC
397.387 471.273 m
634.621 531.117 l
871.859 366.547 l
S
397.387 703.172 m
634.621 905.145 l
S
397.387 800.418 m
613.145 1062.35 l
S
642.887 1062.35 m
871.859 340.367 l
S
397.387 441.352 m
634.621 957.508 l
871.859 344.105 l
S
397.387 448.832 m
634.621 172.055 l
871.859 355.328 l
S
397.387 725.613 m
634.621 250.602 l
S
397.387 594.703 m
634.621 430.133 l
S
397.387 519.898 m
634.621 209.457 l
871.859 228.16 l
S
397.387 777.977 m
634.621 553.559 l
871.859 748.055 l
S
397.387 441.352 m
634.621 344.105 l
871.859 433.871 l
S
397.387 504.938 m
634.621 276.781 l
871.859 445.094 l
S
9.97151 w
/DeviceGray {} CS
[0] SC
397.387 584.5 m
397.387 541.77 l
S
397.387 584.5 m
397.387 627.234 l
S
417.336 584.5 m
417.336 573.48 408.402 564.551 397.383 564.551 c
386.367 564.551 377.434 573.48 377.434 584.5 c
377.434 595.52 386.367 604.449 397.383 604.449 c
408.402 604.449 417.336 595.52 417.336 584.5 c
f
/DeviceRGB {} CS
[1 0 0] SC
634.621 519.898 m
634.621 422.09 l
S
634.621 519.898 m
634.621 617.707 l
S
/DeviceRGB {} cs
[1 0 0] sc
654.574 519.895 m
654.574 508.879 645.641 499.945 634.625 499.945 c
623.605 499.945 614.672 508.879 614.672 519.895 c
614.672 530.914 623.605 539.848 634.625 539.848 c
645.641 539.848 654.574 530.914 654.574 519.895 c
f
/DeviceGray {} CS
[0] SC
871.859 407.691 m
871.859 361.656 l
S
871.859 407.691 m
871.859 453.727 l
S
/DeviceGray {} cs
[0] sc
891.813 407.688 m
891.813 396.668 882.883 387.738 871.863 387.738 c
860.844 387.738 851.914 396.668 851.914 407.688 c
851.914 418.707 860.844 427.641 871.863 427.641 c
882.883 427.641 891.813 418.707 891.813 407.688 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font MLRVOV+Helvetica
%%EOF
