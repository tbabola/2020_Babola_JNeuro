%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.46.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 117 116
%%HiResBoundingBox: 0 0 117 116
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font ZGXNLZ+Helvetica
%!FontType1-1.0: ZGXNLZ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /ZGXNLZ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 65 /A put
dup 66 /B put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 87 /W put
dup 97 /a put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966E33A1007DCC801D574E5901DDD88D9620EDABB066686F036DC338
90D061C2B4859CE1145A7F356FA1ACE6BC87651423278E0A8B93482BF68E1116
1739BE6CC4970EEC90D9091DC83FCBC119121735F66930C3B369837F512F62FE
D1F65D9D416BE3E234E355B35614623FB1E91E16B4EC9703AE3F086A27EFF6A1
6987C1B24BBE34E4BBACF42A008AE4FDFB0298EE180F0EC6D9A886745CD86C52
0934A18D84DD47F18285B19C58C09D71827B47FB3AACAE42D715191134084AC1
0DD3060297C37E5233853C70F8CFD269B9C23F75184A01ED55DDC17249777388
98AA0928AAB1914505560413C2CE00FEF4CE68D13327ACA874E2EF5C74F152DC
F3210FD9FD32407B1BDF38DDEEA8F91CEECC2E4340DBE8208655C999723F93FE
C75118E97E7161A51F5A444CC4D53AAC2C9E257312784CE906FD5E96DD1AD621
117C18D49F856FA5A95AD69D534DC1B358873BD110734CF0106BA7D9B6C54EFE
963CB8534772F49C3E84BF13B2D041EFC5AD462874427558D30D0419149B0A66
B913367FBCD44E8C6F62FF18540D4C6C83A70E0BC04435A9D7425526EC82EBBF
D95A8496075720397B2863A6A4CF5142999E4D5621CBE7740B23E47B5FABA800
3EA1A03128DC7BAA8EC44B9ECF04328271185273674691D7AF9F5F823E87C87F
E785C71C1DEA3230A223EEF2B78ACBC1851606985D1FDECE2BE77A8CEAA4042C
3DC81D126E2729BA7976B095AFF575B5D05AF47BCD47316295F31160D377CCA0
63B3A931E82EDF9DE473D95AEA6B091A61069451F8627454C566EE5F3F180A56
D0C4B1BCCCAAF7F6831FB9874B85FF485EC0C76133A6BF11787E3B2F8D0DD04F
43131571C4A4F3C66566A3EE8B629A6C5F8D1E62C8504534C1F86ECF183D7207
DD72239FCFCFACC28F73E45303421942AA1B1E3442E0E1A1DC9D8204F0C59B5B
335B4EDDDA5D5FCA95804DEED367F8B36F103328509755B8F0F294069CDC55F7
14DA37377943D4D36E5009F7C7027F6940B6F812D0428DF535468E1F0356AA2B
0C5C52737F78411B6815E26AD2BAC9C30DB549DCB4C0FE46AF4795464B7722A2
04C6B48312B2DF5F29F319E338A83B075500EE41E3CE76A553D9560B363E5F4B
83486E797C08FADBE8A69A4D1857C4DC14040A589D8ED5BAFCBA0AB92568E6F5
663E07AE65FB75A2667ED2C7442BDCE46FFD3EE11DF9A5DC0467039771B1B0B2
AEA044C0DFC549CF1010579F4FEEB866778A268A6417EE8402936570E7D635D0
4033AB34BAF5319D297025C9BD8EC5E5713CE1FC62F2CD283F3A2DE8058FE224
3E0AB43DA201DCE50973E1A67A196983D95F3B80826EAB6F6DEA8FDFB73E4F60
A1FD7EBCB64CDDDF115CFFC8B36C18CF213CB40AD2393B3D5D4E1D3D633F8C58
B868B341B40EF6E448BA45FB9FAA5288CC2A5F65E1D5E1554B1C2607CA126911
5E24C30AB05992888AF0CB0F295D5D53422972EB45BFB51C22E200025E107B5C
03A5CA0C934BF93AC45A939BBA7E3042B4844B5345005F78369B721C179BDC7B
69B9693FB171536A4C90BDF82F33611021AE57FBF0AF7AAF4AF30989A14C328E
17FE9B50A54FE56D345881CE965124ECB59545524D12A9EC3D17510543762519
9956254C756487D1EABBBE15B243DA2CE516227E11EAE51C21CD17CA9492815B
B364497A45B347DD9987BACB5465BDC0D6B05CC578BB5EB7F1B152CD44C1CBE6
E32C5984DCF98AD995DE47B6E53A3B48002401AF90C5E479A9996C9037DC8212
683C3B863D37C20B32304518A3415BCE6A3D792FFC93F73403502B0ED9336762
EB445A0691A8CF1C4AC74A8210F432A7FFE098DE4A6BC42F042736D8979E10D5
1604C457113AF407AB3408F545665E1F54032CFE7F9732B9E278B17E519B9161
BE906B4BF4BC6C27E921B7937487431FD125FAC8E96DBC7C8FE9EB0ADE219560
950957D694697CA4B52A5D35177BC1B6B07F8A5B2E7E2CC98D06DD6DA40906FA
83378B379C1C89A16FC7F7C2DE91BCE72693E182AC624540154548D1A8E96A2D
5EAB4C2BF759702DE33F03D103F4CCA7AA3DD6EB07C902784E758BC43B6CCB66
344B36E7AB53F7582D70DF6A405F3C0C2D1D24489279983A085A87A48E38EB1E
84BEC3BD08F858E53BFFE1FFB7C0D0D0F88FB761CB8BAFDB09413C3073F6464E
CAAF1F7F78B166A1258B705CE5F6AAF22CF6C282E118782AE96CE0BBD5E59343
E87CB8BAAB80D14B8CABF12FB5F47F7D16F40979FA6D567992F0F8DB4FAE76B5
53285782CA7E6DAA528A2B44416D75E63D40A668A679B7E2B02AFD0DA77E2953
9AF2E35F168AB841C15C6EE7E5F4C326E60A61A05D3CD02AD44051D7DCF1BE4A
8723520184E2404BABFC1C1A54051ED39FA12D39B447F3641C3977CA4E3EC16B
CB752FB149474F64C7D04D9F5EC8B46AAE0DAB856998BC90576FD20B324309AD
C24C4634D1AD9758599B0E69F484F9A330D457E07C3CEDAC19C0AFBA993ED014
85F8C1530732DC59F873ED586F0DA51856AB1B8AB123EBBE21FB0E7CE6CE9207
8C664C6F3A3F63FADEC0892204DD0B6F88571AAFFF1EB20564EB6D6EEA07A8D9
4D2C51CC09582B17186EE79FE6179C563AF60214AB0F83CFD8662357319C4CA8
172188EBCC2E668F40B22E854CFD7916DD5D3E4D1D39319308DFFE69A3F0FBB8
E8057F79E8AE98A555EA754A902B37351E925F351A46DC3944910CE1A5724316
77F6BAD597F944BA0E425D6B89E9D173CBD436B8DA2A0DE6E0CCB3F972FFA00B
723A357467B451BF41CB9CEB828B0FDBA5D37A596C1F2E302CB2786C1F5E0C95
A42B24CC0ACFAA0796DB87E077EA16B9A110771A3680C81BCB7FA34A401158D9
7DA3FF84F1EEF092B297A329E12F025C4B090148D30C4A91A6BAE0E26346884B
956B6F68D116BF324849695BC67CBCDC185B8373497A5FC923F1E2E22B0E6D74
F60205713308A5740DD30285E1E2B9F89B035A6F7FD89545EF73AE63CEC679BE
20D26E3C51FC2818F604A7ABA256A7044C75C521483B4EADC263B273C1FB1DBA
2A22344C8806A26B835C05467932AA1C4D9047A1F74CE8B591D5966842DFB6E3
7053F67FCAC7AEFD517B545D3DC3DB0E6D8C3B842FC78341FA51F49B490F1C55
367B71D9873DD7F2690C1E1DD02E0965057C9D67EF8F3DB80B27447DFE36BAF5
0F1D88D9B93EDAAEAE363FBD4DE2A98E6C9851749DEA72BAF0FBBD27AECAC366
7E67F8268E6F86F6FF25D7187FEA08C28B6F367042747B96D091247E83F26DCF
383104C58A9DC5BE70965064571052AF97024A340618BA28D53BA1DD677C11E4
376692953E0246CF0444CF380026BD6304FFF0487F54EB6AF87BA67C6BE0C522
C17D7A6D07AE98D19EE7D675D7322C39974E4416830E6F131C3CBAB417B6CBFF
37EBEB5241163DA0726D3825C30AB1D35EAB8BB956D5EEF9B3F42DC1D95729B5
5B482C1A980CC66EE6F91ABBC1E8CA99F4513FDDA1F4A643B43D3D6B541C019A
6101CD15E272A2CC13EE849E81D2CD68D226BE0426F8812093DB8146E445492F
D8587B3A7BF7074E7EB2DF2C5BE02BB0269661079B73209C720FEADE20F9654C
D58E975D86AD590FE365C723811B1FE7241168C4D5F660150DC41BB816353CB1
0F5848228701D9BD0C6AA4A37BAE3D903CEC2C25D933E8F59A46226B56E8EE11
2AA99D935B066C7684DC658B7851A269237EDA6855AA7306C00D33DC62FD3CA5
E80F2EF00494316CF03B42AD5CB2912A3C8C3B7744
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /ZGXNLZ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 117 116 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-10 10.0039 1152 1152 re
f
-10 10.0039 1152 1152 re
f
259.297 129.691 882.699 987.426 re
f
7.4805 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
259.297 129.691 m
1142 129.691 l
S
448.449 129.691 m
448.449 119.816 l
S
700.648 129.691 m
700.648 119.816 l
S
952.844 129.691 m
952.844 119.816 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 31.3801 3.85273] Tm
0 0 Td
/F8_0 6.98155 Tf
(Baseline)
[4.656694
0
3.881742
0
3.490775
0
3.881742
0
1.549904
0
1.549904
0
3.881742
0
3.881742
0] Tj
-580.991 TJm
(MRS)
[5.815631
0
5.040679
0
4.656694
0] Tj
-533.197 TJm
(Washout)
[6.590583
0
3.881742
0
3.490775
0
3.881742
0
3.881742
0
3.881742
0
1.940871
0] Tj
Q
259.297 129.691 m
259.297 1117.12 l
S
259.297 129.691 m
249.422 129.691 l
S
259.297 458.832 m
249.422 458.832 l
S
259.297 787.977 m
249.422 787.977 l
S
259.297 1117.12 m
249.422 1117.12 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 19.0578 10.3508] Tm
0 0 Td
/F8_0 6.98155 Tf
(0)
[3.881742
0] Tj
-7.48047 32.9141 Td
(200)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 65.8286 Td
(400)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 98.7427 Td
(600)
[3.881742
0
3.881742
0
3.881742
0] Tj
[0 1 -1 0 8.33555 35.4105] Tm
0 0 Td
/F8_0 7.68023 Tf
(Mean Amp \(pA\))
[6.397632
0
4.270208
0
4.270208
0
4.270208
0
2.135104
0
5.122713
0
6.397632
0
4.270208
0
2.135104
0
2.557517
0
4.270208
0
5.122713
0
2.557517
0] Tj
Q
4.98949 w
0 J
/DeviceGray {} CS
[0.7012] SC
448.449 638.973 m
700.648 195.109 l
952.844 545.965 l
S
519.426 1117.24 m
700.648 244.613 l
S
448.449 1039.96 m
700.648 257.645 l
952.844 312.82 l
S
448.449 462.512 m
700.648 230.242 l
952.844 370.457 l
S
448.449 478.754 m
700.648 203.375 l
952.844 386.34 l
S
448.449 1066.88 m
700.648 367.594 l
952.844 970.313 l
S
9.97151 w
/DeviceGray {} CS
[0] SC
448.449 857.68 m
448.449 695.801 l
S
448.449 857.68 m
448.449 1019.55 l
S
/DeviceGray {} cs
[0] sc
473.383 857.68 m
473.383 843.906 462.219 832.746 448.449 832.746 c
434.676 832.746 423.516 843.906 423.516 857.68 c
423.516 871.449 434.676 882.609 448.449 882.609 c
462.219 882.609 473.383 871.449 473.383 857.68 c
f
/DeviceRGB {} CS
[1 0 0] SC
700.648 249.762 m
700.648 224.273 l
S
700.648 249.762 m
700.648 275.254 l
S
/DeviceRGB {} cs
[1 0 0] sc
725.582 249.758 m
725.582 235.988 714.422 224.828 700.648 224.828 c
686.879 224.828 675.719 235.988 675.719 249.758 c
675.719 263.531 686.879 274.691 700.648 274.691 c
714.422 274.691 725.582 263.531 725.582 249.758 c
f
/DeviceGray {} CS
[0] SC
952.844 517.18 m
952.844 407.906 l
S
952.844 517.18 m
952.844 626.449 l
S
/DeviceGray {} cs
[0] sc
977.781 517.176 m
977.781 503.406 966.621 492.242 952.852 492.242 c
939.078 492.242 927.918 503.406 927.918 517.176 c
927.918 530.949 939.078 542.109 952.852 542.109 c
966.621 542.109 977.781 530.949 977.781 517.176 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font ZGXNLZ+Helvetica
%%EOF
