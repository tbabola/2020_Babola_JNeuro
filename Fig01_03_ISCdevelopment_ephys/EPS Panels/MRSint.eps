%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.46.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 117 117
%%HiResBoundingBox: 0 0 117 117
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font DUDNAH+Helvetica
%!FontType1-1.0: DUDNAH+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /DUDNAH+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 929 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB97143B4907D322ADD5835E649CEB5DB7F915A7D1DADEE925AD3B5640
D9FD2FC1B554018919C593D775770224A3A1566163EBF9DE3500DB24E37D3F1B
A93F42FEAAF6393A00684F50D8773DC6F0DE729C75D29FA99B8871EA503A95FB
6939F59AEA8C1AA5E478C93D2B24F371C1E29B193E2D99F9868971E3468D9BD6
C0DD51819D14FE77C57BF62541D2175EF350DA681E7F0C45DF4FA861DEADF7BD
D7612E654DA1D6B02FAEDD8F5035D429B5464A8D796C652A5130C7CE0B7CA4C4
44CCEF10EEEC1D161569BDA9B6E01648B49C182A6FADD032EF0C7D2696B34379
B3B58B1A914C5405B9EC79872ADD104656C77BB1FB66C0317C1E796BA15DA4F8
AEF8794B0AAB1E48BFDFE6707464A5F6E5EB7581114D7C831B44AAC6D9D58EF9
7E513F90E9BFB488D001F1C06C3907BA3578941AF6D102AE8C1010AE32DC70D2
59AD24533F803F8D0294FC0A376554718840D4F697E6B09171E1859E43128833
C57008F050D1A5AD16E0518F2FB16F35DDEFFF8BEB216AA03238EC58CF42E7F6
9D21BD924C9D2DB569AA4E429D258847EBEAC3DC9301C7DF817E7AD42C5A2D5E
AB017028FCF9D9F777C755E8F4945EA4125BF272645D5CB2E35BE1538E67D3B3
2A57E013B99EC58C6D7FCFFBEA7C2B998E5E21C4DBF5ECBD1E1CC7D7590D144E
147612EFB0FDCA4FB05FE8794A6F18459D33517667B24870291DE90097F69C5D
AAF1CEFA32120AC639F71CE501A31E5CC56F1994CB0A70A242FFA161347D9B5F
ECB120E24EB43779C9F68D1FCBCCACD09B38259F4CC099AE0DF62631B76A2BFD
5F24629037C70423F49C9C28743509427FEB94E76DEF64AFA34EFCD956399400
24F226DF608EF41FE2A72EA3D7C2618A6F0D0570F23A47232436F838BDF966BE
7082F95A1830647F3986A00287434C5340EF05C79F2AE5E8A1365AD971969454
D6416A47E72947A78BF60504744B502783871FEE81AC96993B0283342A35E157
ED1FAEE4E7A336FAC62EA370579B7C787CC848CC57C88A3DDF2E2ADF4DA60B48
69B54017E9A3036FD840A459E600FB71136585A3DC70E11AD50D31A0CD05FEDA
FBC577EB2F424AF2A1FCCE449381B2D261EC75B5F05D51905EB3A624B2B3FFBB
F956849242E86DF0A9278F4EC64F2D5F9989AE5F19C4C99F043E958BA838713F
9D3DC5636F900F651F37A4D63568CBAD04A4835DDFCB5E36F8E15B6BF3CEFCE0
97325C570AE7167FA577FA1CBB7D36B6188D3131AC567CA593F4FDC109AB8021
ED60B36D40DEDCDE225B90C383BA9DE0534C1B5E3BF459090C66667970C89E36
B3DDAE272971EA90FEFF6AC3DCA850F2449FF370B7362BA3A294D693E760D1AA
5B6E554CBCD314FD01921DDF0EF510A74AF6473713F73B38AFC4A88165D6A0E1
5368109F46729E50C3D60A4063F64A8F9DAFCB8E45DEF659BB7172E9396652A1
72B011520E7CC8911655413AD386F08F492AE9E455198BAD5EC4239E75EA6341
5EC8E993F5291436A0E41601C71088D8ECF6C953F4952BE1F78C6360275152CA
9983876B1B434EB4CA6E03F6C1BE457B59E1341F6D00004C44B32E75BEDD662F
147E9B5B6FC55AE737B2754C37D20FB3101FEE276A2D0281FAEA354614F52F9B
E5F88CE929FF8FD3C0358D550734D8919AD391E86D936897C748234E20AA5E2D
F5B44CCCC6BF3FFDE24A3184AFF286E2BF6569748F4601F3920907EB94968BE4
8E51621E610A9E4C4602926C1B91BBAB832CBC22184279A73C91AE1CEC9AF483
0A836845A03EFC6FEC9EEFDB76C1CD9C486E8B7F47677105EA2D7648868943F8
52E04E7B03E4D25B989FC86BF0233A96F4DC4305C957E054FF313632F55E4448
A8E8BF3B514CF9EBC7BB477699970CC79277EECE52B5D89C9F4477D305E7D738
3D01A11E2B94B57933C4A66C8B4F6DD91F843C520E720F580BD17AB92D68E65D
65801C75B7364DAD623B8710217E7E404C0101B22A3F5AD49FFBF511D2CCD381
44920AB17744844D4EAF6D3D3DFBF836F817F003124431CE095DD980022ED31B
D840A390B4C5B648004FA45275638CB399FD91919319EBB461B0F47F8A63EC04
4E7CC5D58C044F2BECF0024D13BAF38E3BE3B3878C4FF2C7598A5B5E69B7B66D
BC4B06F080F5F25C8DB7F44FE22430F608066BFD0B4B37B863B8F9B8618A926F
F2464A561649608BBD2230CA26636A3CADDC4AB4227CD9CAC1157F7CA652D538
5C55A2DF8513E8816AD4F6473176D2CEF67DA073F1DFAED34A69C48C4D442E76
93ABF05D102C991125AA72C5800FA4CDB78D76A6FE31207EB107BB9AC55FCD12
50B5728840E06A37A32E7ED43DE7BEA92D54561DB6D654C991FA369B50ABA729
8C50F567DF64EBDFF033E8726351455700A7A30E2589878AAE13BE42B5E4257A
A92C7056DA2591CC6633AAAD6A2DB8552D3EABE75CFC708149E5791845F7AED4
98D3E7149CF6779DE6287F81C03C74E76F9E4CF88BFDCFC3A45130D9145A456D
BB474E958C351F96D24B07DEBEB6B818C8395F7680AA0B236C7E0531D051FD4A
7819215DAFA3F232A7AE4C5E5D1E9F92BCF89FA0814952F8DA8D31F99C6A1F7E
76C9E09FE66CA75121710B8A1A939119599B31469E4C0E9B462668EA880894AE
B1E358618C4367FBFBC6FD36495C1461117BE014C866D15B261A1D99015611F6
1A9BED973DA41B6CBFB104558B2B5C7A8FF3AF112CD2A0C536F52B902F2F6B63
FA5441266B0D208ED62ABD309104AAEDB6BD35669E93425F1491C3FBAE7D0FD8
53ABB03E4647E56C82F841777A833AB0032ED46DEA720D66DF2DD2123BC38A7A
A1A95D37E0AA5904221E1BF35A5F4E868E1677E0157167FA56B45E94C236425C
E0B863691FBF241D21F9ABD66B17B6363FD4A5494C142131E8D024441F0F4C8D
17220DF4F69EBCCDB0A181CC5E322ACBD7BDD86F615F9C676F2EBCDEF70C60C7
5FD1EC42830A33FC3E9B4FAFC3D3E27C17872919F9A28BBF50F0538485D79F7C
CC4FAC88EFB9F6E1B01F14BD6457178D773FF2732D44A772ADA3402E8D4A6EF5
0AE0BEFE248723D26107B23B4A32CA8683BF77569FF4A550ADC2E770610F7244
F0582D2FCF22A0E8B8B2F24CE4ED93FA7E971AB294D820287FC2739505A52EFD
2DADE5F99DE4B0C435A603704A52D02D282901BD71B705E8C0DAB45C8C2614EB
9E27344AE8D225ADD1F93614C853818973372BDD73F94D9224F5A70000B8D015
0E69BBFB33B9D607825DC6DC71E3F455E9429DEC244525B36D1E96371E1B7FA5
5A642B5EB383542853FE19E46D39946ED0CB636584AE144D208C6FC7A7AD72A0
12C80D7FF09CB63FE5D75639757AEE2842F4A1485F5C449AA7C2C6056DCD771C
A7592EA239A37EC46DBA38C9536314F59B16DE748344F8C652B977D0103F77D4
E79865B2EECDDA08AF0FD74C54D0D935D26FCDD41EE2A385D07BD77523FBA4E0
2EBA3A1ACC41FBEBA02107DDAE8541BB40AE2C873A4288286B36699EBE34DE10
504EAF7438A6854CBA230F84A6B910CD03AB9EBD143001F156BBFF618FDB4B9E
77352A6837C0A6EB64639780516AAA42B210E6CD05AD7E50A7131ECF7E2E534B
FB9F882F004F0AE6A0F7A47746F5F2D739AE3CDF527BCEF1C8B756057B018F09
77F11A3F9B541C4139ABDA5371CCB80D51E615058D83E265E62A9F8A00514A13
C7445F6D6F0DCC72C17EC73E28F3EE3D5E1A1B654F4DCDC72CEC565C9F565F00
E0D362040B151016A323E9A155AD44A43BF10D3D8AEEF467075011B0B643F64C
310FD846487A36112232A67ECFCB6F346259840C7E091E655B9077819E51D8B4
A5A9F3BBDEFD038715C529BA4F23D93A69B21B715BA0A52E89D64FC609AB6B7A
9F32D290A0567CD88B45768DB07233DA4280F1BF8A057EC9AB927C469DADF710
E7ABA462E186097CBFF0E3578ADECFF1C6ACF5F5DDD28EBA2CD2F8EC56D75898
796F226543FD33B15C7C209AF5B6B78996D2A598C9341CD43368D652828A1361
E37FE349A89CF7A61D6EE6AFD1E15E0DFF9647003ED38EA504FDDFA6160A5ABB
607CC67E1E7E37CD05EB6B8AF4CD703F984826931D713E669DD4176FCC37275A
0D618FA317F893078735883F610284B51A23D3D8B16C2DE78F99ECFB97544242
0154E23E4C52D04FFF5664FED545E7D9D0A415EA8E6151D619854F94F4B1BA5F
1579E0D02CC5CF513FF5FC77504628E6389FBD3884995DDB72C269836AB4313D
0E33A8C232628E22A74FD426F993DDE35B274BE4A3644F95E142982A1EEA690F
5A3373B13DAA0FAEB6B35D0D4BAD02ED616085CB393E8B3B02D9ABA4DE6E1596
D6EE6A8CCE3208131634B0D44695D61777605A2F30DCEAD8F464DFEE01B9F71D
FE5BBDF2E6CAF77A239B32BFFC6501709B4639898918A42BE3327FA838F181C5
E275257B403600C8D2D8F04E0592F82E0E739D0625C401CD225DA6EC98C18325
A562EDCA6C449530E5B99F36FA1A08D9004CC73747E191FDC77AD2F3BFCE5B62
8498EA610D5B38ED7CDCCABEFC8B3CA277786540C1E3D536C25B16B690DE1F3A
5E93F0699488C334702194
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /DUDNAH+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 117 117 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-10 10.0039 1152 1152 re
f
-10 10.0039 1152 1152 re
f
259.297 129.691 882.699 994.906 re
f
7.4805 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
259.297 129.691 m
1142 129.691 l
S
448.449 129.691 m
448.449 119.781 l
S
700.648 129.691 m
700.648 119.781 l
S
952.844 129.691 m
952.844 119.781 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 31.3801 3.84883] Tm
0 0 Td
/F8_0 6.98155 Tf
(Baseline)
[4.656694
0
3.881742
0
3.490775
0
3.881742
0
1.549904
0
1.549904
0
3.881742
0
3.881742
0] Tj
-580.991 TJm
(MRS)
[5.815631
0
5.040679
0
4.656694
0] Tj
-533.197 TJm
(Washout)
[6.590583
0
3.881742
0
3.490775
0
3.881742
0
3.881742
0
3.881742
0
1.940871
0] Tj
Q
259.297 129.691 m
259.297 1124.6 l
S
259.297 129.691 m
249.387 129.691 l
S
259.297 378.418 m
249.387 378.418 l
S
259.297 627.145 m
249.387 627.145 l
S
259.297 875.871 m
249.387 875.871 l
S
259.297 1124.6 m
249.387 1124.6 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 19.0539 10.3508] Tm
0 0 Td
/F8_0 6.98155 Tf
(0)
[3.881742
0] Tj
-7.48047 24.8727 Td
(100)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 49.7454 Td
(200)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 74.6181 Td
(300)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 99.4908 Td
(400)
[3.881742
0
3.881742
0
3.881742
0] Tj
[0 1 -1 0 8.33203 21.5715] Tm
0 0 Td
/F8_0 7.68023 Tf
(Charge Transfer \(-pA*s\))
[5.545126
0
4.270208
0
4.270208
0
2.557517
0
4.270208
0
4.270208
0
2.135104
0
4.692621
0
2.557517
0
4.270208
0
4.270208
0
3.840115
0
2.135104
0
4.270208
0
2.557517
0
2.135104
0
2.557517
0
2.557517
0
4.270208
0
5.122713
0
2.987609
0
3.840115
0
2.557517
0] Tj
Q
4.98949 w
0 J
/DeviceGray {} CS
[0.7012] SC
448.449 436.719 m
700.648 162.539 l
952.844 342.363 l
S
507.516 1124.72 m
700.648 206.582 l
S
448.449 958.539 m
700.648 215.805 l
952.844 228.555 l
S
448.449 332.055 m
700.648 201.43 l
952.844 244.742 l
S
448.449 402.414 m
700.648 178.891 l
952.844 290.723 l
S
448.449 917.484 m
700.648 249.617 l
952.844 853.984 l
S
9.97151 w
/DeviceGray {} CS
[0] SC
448.449 742.129 m
448.449 569.445 l
S
448.449 742.129 m
448.449 914.809 l
S
/DeviceGray {} cs
[0] sc
473.383 742.125 m
473.383 728.352 462.219 717.191 448.449 717.191 c
434.676 717.191 423.516 728.352 423.516 742.125 c
423.516 755.898 434.676 767.059 448.449 767.059 c
462.219 767.059 473.383 755.898 473.383 742.125 c
f
/DeviceRGB {} CS
[1 0 0] SC
700.648 202.477 m
700.648 190.133 l
S
700.648 202.477 m
700.648 214.82 l
S
/DeviceRGB {} cs
[1 0 0] sc
725.582 202.473 m
725.582 188.703 714.422 177.543 700.648 177.543 c
686.879 177.543 675.719 188.703 675.719 202.473 c
675.719 216.246 686.879 227.406 700.648 227.406 c
714.422 227.406 725.582 216.246 725.582 202.473 c
f
/DeviceGray {} CS
[0] SC
952.844 392.07 m
952.844 285.113 l
S
952.844 392.07 m
952.844 499.027 l
S
/DeviceGray {} cs
[0] sc
977.781 392.07 m
977.781 378.297 966.621 367.137 952.852 367.137 c
939.078 367.137 927.918 378.297 927.918 392.07 c
927.918 405.844 939.078 417.004 952.852 417.004 c
966.621 417.004 977.781 405.844 977.781 392.07 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font DUDNAH+Helvetica
%%EOF
