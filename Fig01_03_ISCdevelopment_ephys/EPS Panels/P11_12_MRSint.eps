%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.46.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 117 117
%%HiResBoundingBox: 0 0 117 117
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font NPWRVG+Helvetica
%!FontType1-1.0: NPWRVG+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /NPWRVG+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 761 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 45 /hyphen put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9660E97140986C460AAFC0F27F41C0F31EA98BAC1D6EC92F1EA1F495
8778B4E03D6924C79C969F94D95DEC2827E55458D207FFC332A04067538FE2E9
6250617DE832E7033C5032F71638CF38F9376DD36CC781EF54DCA3376B8920EF
7A905FA9A8824D8A1243079C234350DA17A18AD3076F810A43753DC0D64413C3
0AD920D2D3EA73F3A6D583059FB68469DB9CB90A7753846BA5AD9D706C3D885A
2C879028E09E4BB770609866B09F889E28C0B5BFC6E07A7043CFDF1A55DBFAC5
A36B8F8DE2E68E1F5E4453EDD89636449D434F6B273E1600BC2F84165234FF0E
24E2F1BA0D30518DCA8ED261339762DFD15870DC3CBAA053F649F9F334473E47
BFD7C2B5F8DFBE70ED393309B3292F86278BD0150B3E77F314CF97BC3DC1B507
CC6EB15ABD9CAB8175C70F065576E3B36EB244363B30C3CE5BEF6DDCC8FDB72F
8C7FE4AF7D6F00F4ACC20D1A763F65E481FB50C779A2B92AD5E8DB5C4C7E7DF3
370A6EF4BDF30060C5491AF391EFDA57F4BBE8AAAF65DAED2AB53C952823FD5E
20E1340B6FC2B301A6D48AAB6CE98AC6E2326BD0A69AE1FEB87089CE3AAF08F2
3871B3C1EE44334CB9EA310543012EF8B3967892CCDCBEE5880C4670B59458F9
642DFA62C3C9815624649EBDD587F799D23BED5BD186EE37AD5F27BD9F759197
60152147C096A1F315DDB19298E65A1E0D0ACB7E2B0D85A9A8FF2FC70B0377FC
DBE75C2D4BFA947728AB967CC0A2FE86FC8850BBDF7A959243B0261FC72A88A5
05D972C6DD293A5A962FB591310DA0F2BFDCFE4783BC80D2F021E4BCD30280C8
1716D91F6A82336F9B913569A9C81628018A6065962112D58414F6834D65CE68
81AD6B866BDBFA8576B4944FFCAF19C0A9D7099288F0DD4E319EB7D92AAB3DE8
4F8A701EF1D31C8700C8830E3DB87F174E57164A3E5606848F86F04A43C39FD5
1E96535D5774837DB524B74838CF0A307ABEBB38CE2C5DE96DBCE904B78F3EE2
CFC090125D617EE8531AA3875401811827571FF547109B96E952720AAAD3CCF6
9B07A0E201AF261C56CF9055EA00B131B99006B42541A33A24C03EAC8026D154
5814A2F5EB83CB57E0F80176200D2A6449E3CF7E0CF4836D60CF46B732D7C186
D445DC743A7DEFD7C74866C1FAB43FC2F56B2D5CA5831E1DDE2B01F1BD02CB78
9FEEE001815BA8A18A126F6A30624A147EECA159D3C1871242A97D9DB5EECB22
88E1FD7B2FB3400DBCDAE414DEFFA06822DDB97E44541D237A3C0828FE0B29F7
F516C30099A36081C68813EC11F5AEA5F0A6A53839A41021818C35A9EDCD3B87
E0BFBF73E94589E2EE15CED3C22E2BB97F65F5D0E7AE8C3D0B5C990AC6DB64F4
77B62692AFD4EB5F5E0089AE311325796E73CCE739A97E60A4D8A14E908F14A4
27A70B71654C8A88A2F7477E304E3FC456EF3D6F11B19F0514ADE31305D61F53
FC7A4856DB787FEDFD1DDB002F8C88FA6B5F0FC3343EC7F77ADC24BC07A7FC25
440C1D98383E2DD22E0E2E6312BDD9E9CC3AF155BBEF12552DF916CAAF787A27
ED7F0A6492EB6483658EBCC13FF2DEC40692E6801349C5931D3308575776CA38
EA279FF5722B050E9028D32AA244D215E0AC4EE41BA58A90EA9F1B1D9D9CBC04
469BB5ADCD8A3BD4647535FE7703AEACFCF9CA03C17EB11C21D4D376B4F96DD9
250EABC51C95545599536747509D6D7E6A5F6D5E5A1B3997E4B23D14EA8BDF2D
0FCAD4D2A38A7029270C4231DE9EE0C47B499D0018DEB529CB4BD4193E79797D
8523E3E4682B03CABD26CA0BA81E33BCA1C956642DC9A2463DBCF7506E9D7F80
F48598AACF29C7CA5251061E684286E35191709B851FA23D6EED14901E723476
2629B5C8B92EAB4385DD543C9771A02C7556ACF408F13FAD0530FDF927DA1A6F
AB9B686B629145E45492F579FCDCDDFDDF528C3384B38FF9678725EFCF4530F6
76058044F0358120E0457F89F0170EA118A86386088EC6B1FC1E9EC7E5C6DDAE
551AB2F92C1920FBBFA0B147245DF4560FA3F9221E5D051577C953A231C667D0
C1C4F5BCA9E92D077A3BD2AAE430E2A41E73FEBF5538AC345CD719317C3873C2
652469BD95DAB9649BE054F859262A03642F4138DBA29D8B43A365B6D986BA6D
473F8A4FC49F7383DB6C5CE54E4E9B5DEEEE56C982CE63A008731405E45E929C
806B78A74B6135D288581E0CC848879B4C4C370BEB66C58D758DF3662C012153
640D76BA7A63C4952906DD05BC30447AEF6515BB5CD9A544CF4C1C881D291F8A
8EC73492775B6281ADD93986B222D1FD0334D8B7E668070F17FCDBE788EEEEA5
F7F1CC23EEA60FEEE298762AA358C0904DAFB2FEE3FFD428C91DF810514DDBB2
8B59E323603C7E2D946FD958B023FE135E26DD927CEBEFD77F9B616312F3F334
CD1AB12AA4D24304DA2A8CC51099E54C42C7E564237619FA410E370893C19E0E
E6546CA98115228B4C7F258C343D526F8F6E1C75B8EBB12D101F115BEE0A2F60
D90F610555D9808AC61856EF7A6629178E4C396DBFADA21A24DB41541F9A1504
34E061D483186626F5BF9439F33AB1B357DB7E568A27C841F24A6B95605EF628
7BDDE5683649CD29C228DDF673ADB25B71263744DF6CC5FA8247B35CAE49DAD8
AB3C8DAE62AE59AB45931E9A3F014C0371D700A90FF8B01573DFEB6FE65FA85D
EA0C257C57E0841563BAE6F179F500717EC6405FA620F94AE692FF7F4091FFCE
3865FBEBB2D1B68F8253FDEBB6220A4E922FA5A3AA138B9E9FBA22BABF5EEAC6
6319AD7B86CE4AA238FDB099634CBAA923B82E05B65FE39B337ED689A0C4DFB5
871D3483A2B22020FC073E4B6CB6F810D26B36F69D7C346B3FCBE688165988B5
7547BD313C202F36B58FEA68F736981670270D71223DE979384BE97D882499AB
14CD7B2A0C888C2E67A0379D129CB12C358DA48E4EFDD0BE3D241C82AB8DF1CF
1075F4A6D44F5B230627943D480BC0C4A18D8EB349ED483B065FA09E00B64333
020C5DF96FC628F459E60BB1910A59EB678F421882C604375853DD43DAC68A3A
0E30391C1A30A5F9FE34A9A3776B92CBED4F9D13A86535C4EF7D21FD9095841A
09B6B469FD30C7B3C3C5B133FCF6E1ADB6C12D53FDA7EC4E61E438AD16069024
6DD711DA23831083EA973D12AF14034780D21B369B5A191B12370C5972D1D530
5C9EE47059C6F92F6E00796521689A00FC5B3F2FEA9F4F9F3411EABCE61A19A9
FA4919D94F8B94058ABC7053F7772AF0D11E65FA4A8F7FADC6DDAE6FA52291C5
0606FA52EA7D945A698245D6C3AC8CFB0AA1896063EEAED35B4FD9A59C2B3FEC
ECEED2AFA781A32F7336BFC3B8CDD690CC3DDF79213EBB4D09076F679531E34A
AEB300F52FCB8839235C4474618172A38F7306E91F4F922C0474DFEA11236A31
741F4F3083B64667643BF5CCDD8A4CA19E21C986E656F6E5102AC483E0E91891
4B27AFA0602BBABC60FC611C3776CEAB8E9B044BC3B4764D221CBE05ECB52423
263C495DDC997328B6CAA676A8C5FD3DAEB36A94847352C513B87939A62F5062
542A72D72B32CC1185DB7F42088A33B8331520254A62D735715EA90486620FB5
AD41A14713756C6806F3E26741981FC3F47F56CEEF2FF9499E0A0389B17AE0D5
E08DC84888C26FF28A5C81C99C450146378232BBA7687B6154B78FF434A71FC7
C0A2B68BB2220B58716C6B3E9431EDFC673A171AEB2ECD254557D633185D44B0
2B924318254BE54511289754E39F3211E84DA9BF14F44A0520FA330BED971F08
37444ABE4D4DCEFBF7CC4943CB6AB8B665D201432F4A3052A22F7715417B9243
1D8CAD0696D391BC2B98DDA85B5EAED1B54CFDF01CFB695A315899270CF4FF15
FCDD166829FEEC98C761F37346ADD250AC489D27924476E4F9C91E6ADB6C2C94
869B808BDD2B4B7067D0F83D869F56D5838D6397CB75C1EAD2CC0E3CDB46D5C5
E58157CF90C7FB6A3E42EB8F696371E393C38817B04C91F8CFD42B71EA4F8E12
4BE74D11424BF84878000F56
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /NPWRVG+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 117 117 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-10 10.0039 1152 1152 re
f
-10 10.0039 1152 1152 re
f
259.297 129.691 882.699 994.906 re
f
7.4805 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
259.297 129.691 m
1142 129.691 l
S
524.109 129.691 m
524.109 119.781 l
S
877.188 129.691 m
877.188 119.781 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 38.9461 3.84883] Tm
0 0 Td
/F8_0 6.98155 Tf
(Baseline)
[4.656694
0
3.881742
0
3.490775
0
3.881742
0
1.549904
0
1.549904
0
3.881742
0
3.881742
0] Tj
-2025.93 TJm
(MRS)
[5.815631
0
5.040679
0
4.656694
0] Tj
Q
259.297 129.691 m
259.297 1124.6 l
S
259.297 129.691 m
249.387 129.691 l
S
259.297 461.324 m
249.387 461.324 l
S
259.297 792.965 m
249.387 792.965 l
S
259.297 1124.6 m
249.387 1124.6 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 19.0539 10.3508] Tm
0 0 Td
/F8_0 6.98155 Tf
(0)
[3.881742
0] Tj
-7.48047 33.1637 Td
(200)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 66.3274 Td
(400)
[3.881742
0
3.881742
0
3.881742
0] Tj
-7.48047 99.4907 Td
(600)
[3.881742
0
3.881742
0
3.881742
0] Tj
[0 1 -1 0 8.33203 21.5715] Tm
0 0 Td
/F8_0 7.68023 Tf
(Charge Transfer \(-pA*s\))
[5.545126
0
4.270208
0
4.270208
0
2.557517
0
4.270208
0
4.270208
0
2.135104
0
4.692621
0
2.557517
0
4.270208
0
4.270208
0
3.840115
0
2.135104
0
4.270208
0
2.557517
0
2.135104
0
2.557517
0
2.557517
0
4.270208
0
5.122713
0
2.987609
0
3.840115
0
2.557517
0] Tj
Q
4.98949 w
0 J
/DeviceGray {} CS
[0.7012] SC
524.109 247.344 m
877.188 147.629 l
S
524.109 297.039 m
877.188 139.41 l
S
524.109 380.25 m
877.188 199.387 l
S
524.109 965.023 m
877.188 219.668 l
S
9.97151 w
/DeviceGray {} CS
[0] SC
524.109 472.418 m
524.109 305.938 l
S
524.109 472.418 m
524.109 638.891 l
S
/DeviceGray {} cs
[0] sc
544.059 472.414 m
544.059 461.395 535.129 452.461 524.109 452.461 c
513.09 452.461 504.16 461.395 504.16 472.414 c
504.16 483.434 513.09 492.363 524.109 492.363 c
535.129 492.363 544.059 483.434 544.059 472.414 c
f
/DeviceRGB {} CS
[1 0 0] SC
877.188 176.52 m
877.188 156.949 l
S
877.188 176.52 m
877.188 196.09 l
S
/DeviceRGB {} cs
[1 0 0] sc
897.141 176.516 m
897.141 165.5 888.207 156.566 877.191 156.566 c
866.172 156.566 857.238 165.5 857.238 176.516 c
857.238 187.535 866.172 196.469 877.191 196.469 c
888.207 196.469 897.141 187.535 897.141 176.516 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font NPWRVG+Helvetica
%%EOF
