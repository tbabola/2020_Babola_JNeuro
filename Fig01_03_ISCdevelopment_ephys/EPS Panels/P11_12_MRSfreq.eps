%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.46.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \\(R2018a\\). Operating System: Windows 7)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 118 117
%%HiResBoundingBox: 0 0 118 117
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font HGFOFO+Helvetica
%!FontType1-1.0: HGFOFO+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /HGFOFO+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 761 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 66 /B put
dup 69 /E put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966C56AEEE4E303152D713BF57F7118DFC603E4A7CDC2E0904B8376E
D56DF637AC6598C63C446905C94BC7753D99804EB624FA54222D76E41B5E9430
8526D1AB6C5F687532BCC02EEE694CEE8278FD0F3537C7F6309867F2EC0E5A44
D54EE72359D6427FB8CC02902618511A687CF91B8C929DF1387C63B5BC5F63FE
E3DEA3BD9903872BDC5DF7737ABB2069A6A085F853C08055C60E5C0FB010C513
6685BB91961402A867D820AEBDD6FF151550625EBE6EC3D1578868D9ABFCCC45
58893E396C3D0F457CF701071213AF967EDAB94E1B3941CB75EE02C409B52FC5
233789213389B3C69ABEDFB7AC5EF9EE2CA9F75B7C2A37B5B50CC2D59D360AAD
324B65EA28F94D181CC88E4F66AD4020221289EA5FA253FAD53562505B4D1B1C
427474D689F855C548C23996A9349ED4F436E8BB5897670D230EBF0CB39F5CCF
62710755177D74FA788877A3597A8CEB6DE51D2D533EF14273875861587C72E1
3D1B83D19131FF3164C8AB9DC1B3828BA9B143977296AD84E6FD15E3F3818968
507E590D843767F9048474376F42E3E34C36BCC4A7E31800B0124117F6B8B6CB
8FF7C09347465C7947A7DDA33EC041932C30C0917EC449566DEEDC7587A8503B
593E21CFB7A2991F38A77DD0CABB1EAEFED7D87EC84FF7DEFD8AC81DC009E438
2462F400BB3EE5EB85605AB16BCB84C5F53870B4D54FB04124C7B0DD05A5FDFC
470FBDAC147C1C34BC17D07F34A5746F34EA6464AC8692397A57F64D886846E6
C119E56699B08CCBFDE3A2B2219C2707A47AA06168D6BA3513AE0B1E6B9D9436
17CEEED7867D177052B31ABFA80F7A31E2B70B37B442CED526D04E5FF1B9F0B4
EF7BEEFEBB3C099379F48F09714DDB3F1A059074025DB36BF57A87504F003DC0
89C0A08C46A7D03058EE86DD7D98F5EB5056C2132DA69640AA6C51899D9F8715
B50C8FC84A5CD5823869EDCF89251F148C4C807DD328D9C4865525BDA77A833C
FB139E44FE74259FC6EE81072124B75C686E002508CC9A93E303C4B0E9E4515D
A131F44EE6F33C778A1AC8548D7ECC3C9BE1EF6296C6817702FA32834B8D4CB3
C963DC04DA97081EC75BCFA8C69D26D6518F2B3F77B78C68C7FF9E271D3FF72D
11390DFF89E1D5B9AF1A5A7738B668292A0FE0ED969E592FB2B34995F74D3305
DE9EF0EFAE54478A534F61084C9C117FAE56438C8E27FC9C20DB04EA721798E7
8D8F7863A08DFFBEF99403E2EAAED41CCE81E47E868240F88C3EA97C486AF311
BF3FF17E9181ADE882747FDBF0A0EDFED837CA1F62E6F61CEA50E1C27BE79886
4416E4F355AECD8ECE91E66C38259CD2B16F9ABB36C9B13DDD15B6F10EC550D3
CF1F436D0A8203F1F1C83A5AC6B15623F3CA840A3E1B5F6A63E5AA18C3DA7A16
6C299C05D9827FDBC55FBB2FCD583F644CDBD6720E68785690C156BD3B802997
A4FF03412661A46099196FF53AD7EF68F5F8F00E776DF762922B9CD67D0A9932
BC3B8EF3802BC51B1A8E856B65C8323CC1CE84FF6FF8BCD1F1360861418C16B6
0CD28C265996955FD75B69ED4B1F1C75B40643B5C0C57D2E3AC77EAAA986E06D
26258A214306B978A996786AE08AA1637ED3BB0B95EF7344BE7EC76DD8DBB491
85722731BA4D4C8FCDCC1C1B57DD08840866F77DD37A0E1D2D91EE4E5D5F559A
95D59E793B3396DCEFDBBE10269FD19D9EA6A4DEF8F02D9955A9C4532FED8466
3CA38E807B2461E2E0E49267BCE59416A2D7F46DC040FA873268A591F0D47DC8
984E5033E857492FA70A510FE77600AD99AD80F2466B1413F88ACEF8488D0178
9BC5E39321B06417CF12AC7EEC47F9A7888AB8317F7A1DD8B7027E6689EE7FC4
48C24E5BB3492E18E5163501C6AF4A6D2125E98A70ED3AEA8088C69684039B70
FF9A8181E9A5567837764D8CBE77274EC05037D02A00A5823E6D5937B0174553
B0D74EC2BC4342A719BFE1E2CA7EE4B47BA604E271150903F2A3D16F6D9DD0A5
114EBD5A5E2D22260DB86CF4FEB6CA721B7E72A3FBF514479F8419C72DEE3DEC
BCC39D986A3759C5E2F3D97796557B5A11CB180D6657559CACB128E99B00CAEE
0506DCC0042C92DB39D974E15A64654C3B0E77DDE2DCCE45A6392799E3D3F7C1
DEA529A6BAE2F3933A0EC5F3BF84DF88C79B520D4B2B176C1D87954AB56F657A
8D5DFF8980B558DAD80507166B8B20DCB0BEEAC5564FDCCBA1F8DA99BD2F4117
0BFF6085F367CCFEB4D5AC281A366D8AA3996153A69C04145609C37CD597796B
0A8604534E63509D03C7532C8BC888E7516160C4D6E151E5B7ECE5913C6D6A49
5248E43628294FA28EF28E6E42EB61657758D3985665F17B74A3349C0CC38865
D118F4421447DFA7DCF4A920DBF7AEC960EE726D22C3764EF53B7143BE914E9B
0068B03F7D18408BF8037D53160AB76426BE7407F13FD97DA1B730F58328085D
13AB13DA51DEEE30AB4D08D518B462325B1021C1EC01402ED72646CB1CC36177
6414B9FAAC403ECDC057CE358A605DED65D289A400E11F77868D8E3E50993750
63C9FBAD5103AA616BC1764CE81E02C9E88EA672223307E392F14E34B353F61A
4BEF4399C5775F0BD9CAAA2AD672C05DB67EB3D15E7BCB89881F83976C3D1947
84F7693B185AA72C1EF1273DB1DC4A68C3C56A79B66BEC1E2648B3312E769B7C
F3D5AD17AD19EA5B984661D0FFB45EEFB39603173147D1B9DE5241EF304760D7
0F40A8A19416FBFA8EF07F12A9C20F0BA338F8E49C7BDBBF3A11668B69C03F6E
3BBCB4235F0FF483FF0D0B8454F52C7B0C20CF37E2B39A6D1D7C7F7B20372ACE
A36D9D1BB64E87FABD591EFF9D8B465E69C01E599FEB1D55D7AB8027D76EF35E
9FF779AAEE06A04CEC6834A95B1BF95B1441EC3F2CF699BA92C13E46692C9EC0
DF21FDAFFC559D11C546C4FD46EAFDBC34D81ED3271FD5EFA91A1DB92EE3CEB2
B99E3AAA83E95ED6389FE68AEE78CBC8D6BCE9D13B4CE508983B7EBCF44C9E1A
8BE1880FF7EE7EE3449ED16E2593DEB9C77D707C30FD3FD664F018B256B1F416
36F00B2791B4E07937926171D3274069AE336D8F2F4675FEB9FEDDA96BBBA1BF
10AAD37E2EC326E5BDD170097E59BB76E0290883E68077265ECE4AF2181EF55C
583A1CC8D51370C818736D84EBEB4D949749354F2C729AAF6FFA9CD1304584B4
00021AA25BF48DE69508600B423F7EFB0C42933BB9E83DDCC755C16F0CD0D1DE
CB10738BC87D3B4E600117DE10C66D190C2679F2B82172EF4ED6283EDF4F8147
CC2A908C6C0A7AD7757EC386A883A604D382C86EB3ECE237722DBA4EAC9F79E8
B6F124C4EF08C2761F1D1E336648220E100D6C77EF9222CD3C0B0CE65C267A12
7EA8426551E50D57219F5EFF50AF51158D85EA6DFAA0B841
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /HGFOFO+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 118 117 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 10.0039 1152 1152 re
f
0 10.0039 1152 1152 re
f
224.414 129.691 927.582 994.906 re
f
7.4805 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
224.414 129.691 m
1152 129.691 l
S
502.691 129.691 m
502.691 119.781 l
S
873.723 129.691 m
873.723 119.781 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.8043 3.84883] Tm
0 0 Td
/F8_0 6.98155 Tf
(Baseline)
[4.656694
0
3.881742
0
3.490775
0
3.881742
0
1.549904
0
1.549904
0
3.881742
0
3.881742
0] Tj
-2283.08 TJm
(MRS)
[5.815631
0
5.040679
0
4.656694
0] Tj
Q
224.414 129.691 m
224.414 1124.6 l
S
224.414 129.691 m
214.504 129.691 l
S
224.414 328.672 m
214.504 328.672 l
S
224.414 527.652 m
214.504 527.652 l
S
224.414 726.637 m
214.504 726.637 l
S
224.414 925.617 m
214.504 925.617 l
S
224.414 1124.6 m
214.504 1124.6 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 15.5656 10.3508] Tm
0 0 Td
/F8_0 6.98155 Tf
(0)
[3.881742
0] Tj
-3.74023 19.898 Td
(10)
[3.881742
0
3.881742
0] Tj
-3.74023 39.796 Td
(20)
[3.881742
0
3.881742
0] Tj
-3.74023 59.6944 Td
(30)
[3.881742
0
3.881742
0] Tj
-3.74023 79.5924 Td
(40)
[3.881742
0
3.881742
0] Tj
-3.74023 99.4904 Td
(50)
[3.881742
0
3.881742
0] Tj
[0 1 -1 0 8.58398 31.2961] Tm
0 0 Td
/F8_0 7.68023 Tf
(Events Per Minute)
[5.122713
0
3.840115
0
4.270208
0
4.270208
0
2.135104
0
3.840115
0
2.135104
0
5.122713
0
4.270208
0
2.557517
0
2.135104
0
6.397632
0
1.705011
0
4.270208
0
4.270208
0
2.135104
0
4.270208
0] Tj
Q
4.98949 w
0 J
/DeviceGray {} CS
[0.7012] SC
502.691 467.961 m
873.723 233.16 l
S
502.691 408.266 m
873.723 137.648 l
S
502.691 563.469 m
873.723 471.938 l
S
502.691 288.875 m
873.723 169.488 l
S
9.97151 w
/DeviceGray {} CS
[0] SC
502.691 432.145 m
502.691 374.676 l
S
502.691 432.145 m
502.691 489.609 l
S
/DeviceGray {} cs
[0] sc
522.641 432.141 m
522.641 421.121 513.711 412.191 502.691 412.191 c
491.672 412.191 482.742 421.121 482.742 432.141 c
482.742 443.16 491.672 452.09 502.691 452.09 c
513.711 452.09 522.641 443.16 522.641 432.141 c
f
/DeviceRGB {} CS
[1 0 0] SC
873.723 253.059 m
873.723 177.445 l
S
873.723 253.059 m
873.723 328.672 l
S
/DeviceRGB {} cs
[1 0 0] sc
893.676 253.059 m
893.676 242.039 884.742 233.105 873.727 233.105 c
862.707 233.105 853.773 242.039 853.773 253.059 c
853.773 264.074 862.707 273.008 873.727 273.008 c
884.742 273.008 893.676 264.074 893.676 253.059 c
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font HGFOFO+Helvetica
%%EOF
